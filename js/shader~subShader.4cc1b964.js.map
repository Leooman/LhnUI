{"version":3,"sources":["webpack:///D:/workspace/ui/node_modules/core-js/internals/object-keys.js","webpack:///D:/workspace/ui/node_modules/core-js/internals/object-get-prototype-of.js","webpack:///D:/workspace/ui/node_modules/core-js/internals/define-iterator.js","webpack:///D:/workspace/ui/node_modules/core-js/internals/create-iterator-constructor.js","webpack:///D:/workspace/ui/node_modules/core-js/internals/to-string-tag-support.js","webpack:///D:/workspace/ui/node_modules/core-js/internals/well-known-symbol-wrapped.js","webpack:///D:/workspace/ui/node_modules/core-js/internals/object-to-string.js","webpack:///D:/workspace/ui/node_modules/core-js/internals/iterators.js","webpack:///D:/workspace/ui/node_modules/core-js/modules/es.symbol.iterator.js","webpack:///D:/workspace/ui/node_modules/core-js/internals/define-well-known-symbol.js","webpack:///D:/workspace/ui/node_modules/core-js/internals/correct-prototype-getter.js","webpack:///D:/workspace/ui/node_modules/core-js/internals/object-create.js","webpack:///D:/workspace/ui/node_modules/core-js/modules/es.symbol.description.js","webpack:///D:/workspace/ui/node_modules/core-js/modules/web.dom-collections.iterator.js","webpack:///D:/workspace/ui/node_modules/core-js/internals/html.js","webpack:///D:/workspace/ui/node_modules/core-js/modules/es.array.iterator.js","webpack:///D:/workspace/ui/node_modules/core-js/internals/string-multibyte.js","webpack:///D:/workspace/ui/node_modules/core-js/internals/object-define-properties.js","webpack:///D:/workspace/ui/node_modules/core-js/internals/object-set-prototype-of.js","webpack:///D:/workspace/ui/node_modules/core-js/modules/es.symbol.js","webpack:///D:/workspace/ui/node_modules/core-js/internals/classof.js","webpack:///D:/workspace/ui/node_modules/core-js/internals/add-to-unscopables.js","webpack:///D:/workspace/ui/node_modules/core-js/internals/object-get-own-property-names-external.js","webpack:///D:/workspace/ui/node_modules/core-js/modules/es.object.to-string.js","webpack:///D:/workspace/ui/node_modules/core-js/modules/es.string.iterator.js","webpack:///D:/workspace/ui/node_modules/core-js/internals/a-possible-prototype.js","webpack:///../shader/src/config.ts","webpack:///../shader/src/base.ts","webpack:///../shader/src/renderer.ts","webpack:///../shader/src/shader/test.ts","webpack:///../shader/src/shader/test1.ts","webpack:///../shader/src/shader/test2.ts","webpack:///../shader/src/shader/test3.ts","webpack:///../shader/src/shader/test4.ts","webpack:///../shader/src/shader/test5.ts","webpack:///../shader/src/shader/test6.ts","webpack:///../shader/src/shader/test7.ts","webpack:///../shader/src/shader/test8.ts","webpack:///../shader/src/shader/test9.ts","webpack:///../shader/src/shader/test10.ts","webpack:///../shader/src/shader/test11.ts","webpack:///../shader/src/shader/test12.ts","webpack:///../shader/src/shader/test13.ts","webpack:///../shader/src/shader/test14.ts","webpack:///../shader/src/shader/test15.ts","webpack:///../shader/src/index.ts","webpack:///D:/workspace/ui/node_modules/core-js/internals/set-to-string-tag.js","webpack:///D:/workspace/ui/node_modules/core-js/internals/iterators-core.js"],"names":["internalObjectKeys","enumBugKeys","module","exports","Object","keys","O","has","toObject","sharedKey","CORRECT_PROTOTYPE_GETTER","IE_PROTO","ObjectPrototype","prototype","getPrototypeOf","constructor","$","createIteratorConstructor","setPrototypeOf","setToStringTag","createNonEnumerableProperty","redefine","wellKnownSymbol","IS_PURE","Iterators","IteratorsCore","IteratorPrototype","BUGGY_SAFARI_ITERATORS","ITERATOR","KEYS","VALUES","ENTRIES","returnThis","this","Iterable","NAME","IteratorConstructor","next","DEFAULT","IS_SET","FORCED","CurrentIteratorPrototype","methods","KEY","getIterationMethod","KIND","defaultIterator","IterablePrototype","TO_STRING_TAG","INCORRECT_VALUES_NAME","nativeIterator","anyNativeIterator","entries","call","name","values","target","proto","forced","create","createPropertyDescriptor","test","String","f","TO_STRING_TAG_SUPPORT","classof","toString","defineWellKnownSymbol","path","wrappedWellKnownSymbolModule","defineProperty","Symbol","value","fails","F","activeXDocument","anObject","defineProperties","hiddenKeys","html","documentCreateElement","GT","LT","PROTOTYPE","SCRIPT","EmptyConstructor","scriptTag","content","NullProtoObjectViaActiveX","write","close","temp","parentWindow","NullProtoObjectViaIFrame","iframeDocument","iframe","JS","style","display","appendChild","src","contentWindow","document","open","NullProtoObject","domain","ActiveXObject","error","length","Properties","result","undefined","DESCRIPTORS","global","isObject","copyConstructorProperties","NativeSymbol","description","EmptyStringDescriptionStore","SymbolWrapper","arguments","symbolPrototype","symbolToString","native","regexp","configurable","get","symbol","valueOf","string","desc","slice","replace","DOMIterables","ArrayIteratorMethods","ArrayValues","COLLECTION_NAME","Collection","CollectionPrototype","METHOD_NAME","getBuiltIn","toIndexedObject","addToUnscopables","InternalStateModule","defineIterator","ARRAY_ITERATOR","setInternalState","set","getInternalState","getterFor","Array","iterated","kind","type","index","state","done","Arguments","toInteger","requireObjectCoercible","createMethod","CONVERT_TO_STRING","$this","pos","first","second","S","position","size","charCodeAt","charAt","codeAt","definePropertyModule","objectKeys","key","aPossiblePrototype","setter","CORRECT_SETTER","getOwnPropertyDescriptor","__proto__","NATIVE_SYMBOL","USE_SYMBOL_AS_UID","isArray","toPrimitive","nativeObjectCreate","getOwnPropertyNamesModule","getOwnPropertyNamesExternal","getOwnPropertySymbolsModule","getOwnPropertyDescriptorModule","propertyIsEnumerableModule","shared","uid","$forEach","forEach","HIDDEN","SYMBOL","TO_PRIMITIVE","$Symbol","$stringify","nativeGetOwnPropertyDescriptor","nativeDefineProperty","nativeGetOwnPropertyNames","nativePropertyIsEnumerable","AllSymbols","ObjectPrototypeSymbols","StringToSymbolRegistry","SymbolToStringRegistry","WellKnownSymbolsStore","QObject","USE_SETTER","findChild","setSymbolDescriptor","a","P","Attributes","ObjectPrototypeDescriptor","wrap","tag","isSymbol","it","$defineProperty","enumerable","$defineProperties","properties","concat","$getOwnPropertySymbols","$propertyIsEnumerable","$create","V","$getOwnPropertyDescriptor","descriptor","$getOwnPropertyNames","names","push","IS_OBJECT_PROTOTYPE","TypeError","unsafe","sham","stat","keyFor","sym","useSetter","useSimple","getOwnPropertyNames","getOwnPropertySymbols","FORCED_JSON_STRINGIFY","stringify","replacer","space","$replacer","args","apply","classofRaw","CORRECT_ARGUMENTS","tryGet","callee","UNSCOPABLES","ArrayPrototype","windowNames","window","getWindowNames","STRING_ITERATOR","point","RendererColor","RendererAlpha","CameraFov","CameraNear","CameraFar","AxesHelper","AxesSize","__values","o","s","iterator","m","i","WEBGLRenderer","parentElem","options","init","renderer","createRenderer","scene","createScene","camera","createCamera","clock","THREE","C","createAxesHelper","antialias","alpha","setClearColor","setSize","clientWidth","clientHeight","domElement","lookAt","add","animate","animation","requestAnimationFrame","bind","render","destroy","removeEventListener","resize","clearScene","renderLists","dispose","forceContextLoss","cancelAnimationFrame","clear","_removeItem","item","_this","children","filter","x","geometry","material","registerEventListeners","e_1","_a","eventListeners","_registerListener","eventName","eventArr","eventArr_1","eventArr_1_1","eventItem","addEventListener","fn","e_1_1","return","mousewheel","onmousewheel","e","pointerup","pointermove","shaderMaterial","shader","createShader","width","height","uniforms","iTime","iResolution","iMouse","vertexShader","testVertexShader","fragmentShader","testFragmentShader","geom","mesh","getDelta","fns","TAG","STATIC","PrototypeOfArrayIteratorPrototype","arrayIterator"],"mappings":"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","file":"js/shader~subShader.4cc1b964.js","sourcesContent":["var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.github.io/ecma262/#sec-object.keys\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","var has = require('../internals/has');\nvar toObject = require('../internals/to-object');\nvar sharedKey = require('../internals/shared-key');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\nvar IE_PROTO = sharedKey('IE_PROTO');\nvar ObjectPrototype = Object.prototype;\n\n// `Object.getPrototypeOf` method\n// https://tc39.github.io/ecma262/#sec-object.getprototypeof\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectPrototype : null;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\nvar Iterators = require('../internals/iterators');\nvar IteratorsCore = require('../internals/iterators-core');\n\nvar IteratorPrototype = IteratorsCore.IteratorPrototype;\nvar BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;\nvar ITERATOR = wellKnownSymbol('iterator');\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar ENTRIES = 'entries';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {\n  createIteratorConstructor(IteratorConstructor, NAME, next);\n\n  var getIterationMethod = function (KIND) {\n    if (KIND === DEFAULT && defaultIterator) return defaultIterator;\n    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];\n    switch (KIND) {\n      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };\n      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };\n      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };\n    } return function () { return new IteratorConstructor(this); };\n  };\n\n  var TO_STRING_TAG = NAME + ' Iterator';\n  var INCORRECT_VALUES_NAME = false;\n  var IterablePrototype = Iterable.prototype;\n  var nativeIterator = IterablePrototype[ITERATOR]\n    || IterablePrototype['@@iterator']\n    || DEFAULT && IterablePrototype[DEFAULT];\n  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);\n  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;\n  var CurrentIteratorPrototype, methods, KEY;\n\n  // fix native\n  if (anyNativeIterator) {\n    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));\n    if (IteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {\n      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {\n        if (setPrototypeOf) {\n          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);\n        } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {\n          createNonEnumerableProperty(CurrentIteratorPrototype, ITERATOR, returnThis);\n        }\n      }\n      // Set @@toStringTag to native iterators\n      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);\n      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;\n    }\n  }\n\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {\n    INCORRECT_VALUES_NAME = true;\n    defaultIterator = function values() { return nativeIterator.call(this); };\n  }\n\n  // define iterator\n  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {\n    createNonEnumerableProperty(IterablePrototype, ITERATOR, defaultIterator);\n  }\n  Iterators[NAME] = defaultIterator;\n\n  // export additional methods\n  if (DEFAULT) {\n    methods = {\n      values: getIterationMethod(VALUES),\n      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),\n      entries: getIterationMethod(ENTRIES)\n    };\n    if (FORCED) for (KEY in methods) {\n      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {\n        redefine(IterablePrototype, KEY, methods[KEY]);\n      }\n    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);\n  }\n\n  return methods;\n};\n","'use strict';\nvar IteratorPrototype = require('../internals/iterators-core').IteratorPrototype;\nvar create = require('../internals/object-create');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar Iterators = require('../internals/iterators');\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (IteratorConstructor, NAME, next) {\n  var TO_STRING_TAG = NAME + ' Iterator';\n  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(1, next) });\n  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);\n  Iterators[TO_STRING_TAG] = returnThis;\n  return IteratorConstructor;\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\nmodule.exports = String(test) === '[object z]';\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nexports.f = wellKnownSymbol;\n","'use strict';\nvar TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar classof = require('../internals/classof');\n\n// `Object.prototype.toString` method implementation\n// https://tc39.github.io/ecma262/#sec-object.prototype.tostring\nmodule.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {\n  return '[object ' + classof(this) + ']';\n};\n","module.exports = {};\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.iterator` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.iterator\ndefineWellKnownSymbol('iterator');\n","var path = require('../internals/path');\nvar has = require('../internals/has');\nvar wrappedWellKnownSymbolModule = require('../internals/well-known-symbol-wrapped');\nvar defineProperty = require('../internals/object-define-property').f;\n\nmodule.exports = function (NAME) {\n  var Symbol = path.Symbol || (path.Symbol = {});\n  if (!has(Symbol, NAME)) defineProperty(Symbol, NAME, {\n    value: wrappedWellKnownSymbolModule.f(NAME)\n  });\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  function F() { /* empty */ }\n  F.prototype.constructor = null;\n  return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n","var anObject = require('../internals/an-object');\nvar defineProperties = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\n\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar EmptyConstructor = function () { /* empty */ };\n\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  activeXDocument = null; // avoid memory leak\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    /* global ActiveXObject */\n    activeXDocument = document.domain && new ActiveXObject('htmlfile');\n  } catch (error) { /* ignore */ }\n  NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();\n  var length = enumBugKeys.length;\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n  return NullProtoObject();\n};\n\nhiddenKeys[IE_PROTO] = true;\n\n// `Object.create` method\n// https://tc39.github.io/ecma262/#sec-object.create\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE] = anObject(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : defineProperties(result, Properties);\n};\n","// `Symbol.prototype.description` getter\n// https://tc39.github.io/ecma262/#sec-symbol.prototype.description\n'use strict';\nvar $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar has = require('../internals/has');\nvar isObject = require('../internals/is-object');\nvar defineProperty = require('../internals/object-define-property').f;\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\n\nvar NativeSymbol = global.Symbol;\n\nif (DESCRIPTORS && typeof NativeSymbol == 'function' && (!('description' in NativeSymbol.prototype) ||\n  // Safari 12 bug\n  NativeSymbol().description !== undefined\n)) {\n  var EmptyStringDescriptionStore = {};\n  // wrap Symbol constructor for correct work with undefined description\n  var SymbolWrapper = function Symbol() {\n    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : String(arguments[0]);\n    var result = this instanceof SymbolWrapper\n      ? new NativeSymbol(description)\n      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'\n      : description === undefined ? NativeSymbol() : NativeSymbol(description);\n    if (description === '') EmptyStringDescriptionStore[result] = true;\n    return result;\n  };\n  copyConstructorProperties(SymbolWrapper, NativeSymbol);\n  var symbolPrototype = SymbolWrapper.prototype = NativeSymbol.prototype;\n  symbolPrototype.constructor = SymbolWrapper;\n\n  var symbolToString = symbolPrototype.toString;\n  var native = String(NativeSymbol('test')) == 'Symbol(test)';\n  var regexp = /^Symbol\\((.*)\\)[^)]+$/;\n  defineProperty(symbolPrototype, 'description', {\n    configurable: true,\n    get: function description() {\n      var symbol = isObject(this) ? this.valueOf() : this;\n      var string = symbolToString.call(symbol);\n      if (has(EmptyStringDescriptionStore, symbol)) return '';\n      var desc = native ? string.slice(7, -1) : string.replace(regexp, '$1');\n      return desc === '' ? undefined : desc;\n    }\n  });\n\n  $({ global: true, forced: true }, {\n    Symbol: SymbolWrapper\n  });\n}\n","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar ArrayIteratorMethods = require('../modules/es.array.iterator');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar ArrayValues = ArrayIteratorMethods.values;\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  if (CollectionPrototype) {\n    // some Chrome versions have non-configurable methods on DOMTokenList\n    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {\n      createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);\n    } catch (error) {\n      CollectionPrototype[ITERATOR] = ArrayValues;\n    }\n    if (!CollectionPrototype[TO_STRING_TAG]) {\n      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);\n    }\n    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {\n      // some Chrome versions have non-configurable methods on DOMTokenList\n      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {\n        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);\n      } catch (error) {\n        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];\n      }\n    }\n  }\n}\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n","'use strict';\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar Iterators = require('../internals/iterators');\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar ARRAY_ITERATOR = 'Array Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);\n\n// `Array.prototype.entries` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.entries\n// `Array.prototype.keys` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.keys\n// `Array.prototype.values` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.values\n// `Array.prototype[@@iterator]` method\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@iterator\n// `CreateArrayIterator` internal method\n// https://tc39.github.io/ecma262/#sec-createarrayiterator\nmodule.exports = defineIterator(Array, 'Array', function (iterated, kind) {\n  setInternalState(this, {\n    type: ARRAY_ITERATOR,\n    target: toIndexedObject(iterated), // target\n    index: 0,                          // next index\n    kind: kind                         // kind\n  });\n// `%ArrayIteratorPrototype%.next` method\n// https://tc39.github.io/ecma262/#sec-%arrayiteratorprototype%.next\n}, function () {\n  var state = getInternalState(this);\n  var target = state.target;\n  var kind = state.kind;\n  var index = state.index++;\n  if (!target || index >= target.length) {\n    state.target = undefined;\n    return { value: undefined, done: true };\n  }\n  if (kind == 'keys') return { value: index, done: false };\n  if (kind == 'values') return { value: target[index], done: false };\n  return { value: [index, target[index]], done: false };\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values%\n// https://tc39.github.io/ecma262/#sec-createunmappedargumentsobject\n// https://tc39.github.io/ecma262/#sec-createmappedargumentsobject\nIterators.Arguments = Iterators.Array;\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","var toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.{ codePointAt, at }` methods implementation\nvar createMethod = function (CONVERT_TO_STRING) {\n  return function ($this, pos) {\n    var S = String(requireObjectCoercible($this));\n    var position = toInteger(pos);\n    var size = S.length;\n    var first, second;\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n    first = S.charCodeAt(position);\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\n      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF\n        ? CONVERT_TO_STRING ? S.charAt(position) : first\n        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.codePointAt` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.codepointat\n  codeAt: createMethod(false),\n  // `String.prototype.at` method\n  // https://github.com/mathiasbynens/String.prototype.at\n  charAt: createMethod(true)\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.github.io/ecma262/#sec-object.defineproperties\nmodule.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);\n  return O;\n};\n","var anObject = require('../internals/an-object');\nvar aPossiblePrototype = require('../internals/a-possible-prototype');\n\n// `Object.setPrototypeOf` method\n// https://tc39.github.io/ecma262/#sec-object.setprototypeof\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n  var CORRECT_SETTER = false;\n  var test = {};\n  var setter;\n  try {\n    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;\n    setter.call(test, []);\n    CORRECT_SETTER = test instanceof Array;\n  } catch (error) { /* empty */ }\n  return function setPrototypeOf(O, proto) {\n    anObject(O);\n    aPossiblePrototype(proto);\n    if (CORRECT_SETTER) setter.call(O, proto);\n    else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar getBuiltIn = require('../internals/get-built-in');\nvar IS_PURE = require('../internals/is-pure');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\nvar fails = require('../internals/fails');\nvar has = require('../internals/has');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar anObject = require('../internals/an-object');\nvar toObject = require('../internals/to-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPrimitive = require('../internals/to-primitive');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar nativeObjectCreate = require('../internals/object-create');\nvar objectKeys = require('../internals/object-keys');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertyNamesExternal = require('../internals/object-get-own-property-names-external');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar shared = require('../internals/shared');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar uid = require('../internals/uid');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar wrappedWellKnownSymbolModule = require('../internals/well-known-symbol-wrapped');\nvar defineWellKnownSymbol = require('../internals/define-well-known-symbol');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar InternalStateModule = require('../internals/internal-state');\nvar $forEach = require('../internals/array-iteration').forEach;\n\nvar HIDDEN = sharedKey('hidden');\nvar SYMBOL = 'Symbol';\nvar PROTOTYPE = 'prototype';\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(SYMBOL);\nvar ObjectPrototype = Object[PROTOTYPE];\nvar $Symbol = global.Symbol;\nvar $stringify = getBuiltIn('JSON', 'stringify');\nvar nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\nvar nativeDefineProperty = definePropertyModule.f;\nvar nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;\nvar nativePropertyIsEnumerable = propertyIsEnumerableModule.f;\nvar AllSymbols = shared('symbols');\nvar ObjectPrototypeSymbols = shared('op-symbols');\nvar StringToSymbolRegistry = shared('string-to-symbol-registry');\nvar SymbolToStringRegistry = shared('symbol-to-string-registry');\nvar WellKnownSymbolsStore = shared('wks');\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDescriptor = DESCRIPTORS && fails(function () {\n  return nativeObjectCreate(nativeDefineProperty({}, 'a', {\n    get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (O, P, Attributes) {\n  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);\n  if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];\n  nativeDefineProperty(O, P, Attributes);\n  if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {\n    nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);\n  }\n} : nativeDefineProperty;\n\nvar wrap = function (tag, description) {\n  var symbol = AllSymbols[tag] = nativeObjectCreate($Symbol[PROTOTYPE]);\n  setInternalState(symbol, {\n    type: SYMBOL,\n    tag: tag,\n    description: description\n  });\n  if (!DESCRIPTORS) symbol.description = description;\n  return symbol;\n};\n\nvar isSymbol = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return Object(it) instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(O, P, Attributes) {\n  if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);\n  anObject(O);\n  var key = toPrimitive(P, true);\n  anObject(Attributes);\n  if (has(AllSymbols, key)) {\n    if (!Attributes.enumerable) {\n      if (!has(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));\n      O[HIDDEN][key] = true;\n    } else {\n      if (has(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;\n      Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });\n    } return setSymbolDescriptor(O, key, Attributes);\n  } return nativeDefineProperty(O, key, Attributes);\n};\n\nvar $defineProperties = function defineProperties(O, Properties) {\n  anObject(O);\n  var properties = toIndexedObject(Properties);\n  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));\n  $forEach(keys, function (key) {\n    if (!DESCRIPTORS || $propertyIsEnumerable.call(properties, key)) $defineProperty(O, key, properties[key]);\n  });\n  return O;\n};\n\nvar $create = function create(O, Properties) {\n  return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);\n};\n\nvar $propertyIsEnumerable = function propertyIsEnumerable(V) {\n  var P = toPrimitive(V, true);\n  var enumerable = nativePropertyIsEnumerable.call(this, P);\n  if (this === ObjectPrototype && has(AllSymbols, P) && !has(ObjectPrototypeSymbols, P)) return false;\n  return enumerable || !has(this, P) || !has(AllSymbols, P) || has(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;\n};\n\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {\n  var it = toIndexedObject(O);\n  var key = toPrimitive(P, true);\n  if (it === ObjectPrototype && has(AllSymbols, key) && !has(ObjectPrototypeSymbols, key)) return;\n  var descriptor = nativeGetOwnPropertyDescriptor(it, key);\n  if (descriptor && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) {\n    descriptor.enumerable = true;\n  }\n  return descriptor;\n};\n\nvar $getOwnPropertyNames = function getOwnPropertyNames(O) {\n  var names = nativeGetOwnPropertyNames(toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (!has(AllSymbols, key) && !has(hiddenKeys, key)) result.push(key);\n  });\n  return result;\n};\n\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(O) {\n  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;\n  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (has(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || has(ObjectPrototype, key))) {\n      result.push(AllSymbols[key]);\n    }\n  });\n  return result;\n};\n\n// `Symbol` constructor\n// https://tc39.github.io/ecma262/#sec-symbol-constructor\nif (!NATIVE_SYMBOL) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor');\n    var description = !arguments.length || arguments[0] === undefined ? undefined : String(arguments[0]);\n    var tag = uid(description);\n    var setter = function (value) {\n      if (this === ObjectPrototype) setter.call(ObjectPrototypeSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));\n    };\n    if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });\n    return wrap(tag, description);\n  };\n\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return getInternalState(this).tag;\n  });\n\n  redefine($Symbol, 'withoutSetter', function (description) {\n    return wrap(uid(description), description);\n  });\n\n  propertyIsEnumerableModule.f = $propertyIsEnumerable;\n  definePropertyModule.f = $defineProperty;\n  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;\n  getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;\n  getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;\n\n  wrappedWellKnownSymbolModule.f = function (name) {\n    return wrap(wellKnownSymbol(name), name);\n  };\n\n  if (DESCRIPTORS) {\n    // https://github.com/tc39/proposal-Symbol-description\n    nativeDefineProperty($Symbol[PROTOTYPE], 'description', {\n      configurable: true,\n      get: function description() {\n        return getInternalState(this).description;\n      }\n    });\n    if (!IS_PURE) {\n      redefine(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });\n    }\n  }\n}\n\n$({ global: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, {\n  Symbol: $Symbol\n});\n\n$forEach(objectKeys(WellKnownSymbolsStore), function (name) {\n  defineWellKnownSymbol(name);\n});\n\n$({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {\n  // `Symbol.for` method\n  // https://tc39.github.io/ecma262/#sec-symbol.for\n  'for': function (key) {\n    var string = String(key);\n    if (has(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];\n    var symbol = $Symbol(string);\n    StringToSymbolRegistry[string] = symbol;\n    SymbolToStringRegistry[symbol] = string;\n    return symbol;\n  },\n  // `Symbol.keyFor` method\n  // https://tc39.github.io/ecma262/#sec-symbol.keyfor\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol');\n    if (has(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];\n  },\n  useSetter: function () { USE_SETTER = true; },\n  useSimple: function () { USE_SETTER = false; }\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {\n  // `Object.create` method\n  // https://tc39.github.io/ecma262/#sec-object.create\n  create: $create,\n  // `Object.defineProperty` method\n  // https://tc39.github.io/ecma262/#sec-object.defineproperty\n  defineProperty: $defineProperty,\n  // `Object.defineProperties` method\n  // https://tc39.github.io/ecma262/#sec-object.defineproperties\n  defineProperties: $defineProperties,\n  // `Object.getOwnPropertyDescriptor` method\n  // https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptors\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL }, {\n  // `Object.getOwnPropertyNames` method\n  // https://tc39.github.io/ecma262/#sec-object.getownpropertynames\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // `Object.getOwnPropertySymbols` method\n  // https://tc39.github.io/ecma262/#sec-object.getownpropertysymbols\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives\n// https://bugs.chromium.org/p/v8/issues/detail?id=3443\n$({ target: 'Object', stat: true, forced: fails(function () { getOwnPropertySymbolsModule.f(1); }) }, {\n  getOwnPropertySymbols: function getOwnPropertySymbols(it) {\n    return getOwnPropertySymbolsModule.f(toObject(it));\n  }\n});\n\n// `JSON.stringify` method behavior with symbols\n// https://tc39.github.io/ecma262/#sec-json.stringify\nif ($stringify) {\n  var FORCED_JSON_STRINGIFY = !NATIVE_SYMBOL || fails(function () {\n    var symbol = $Symbol();\n    // MS Edge converts symbol values to JSON as {}\n    return $stringify([symbol]) != '[null]'\n      // WebKit converts symbol values to JSON as null\n      || $stringify({ a: symbol }) != '{}'\n      // V8 throws on boxed symbols\n      || $stringify(Object(symbol)) != '{}';\n  });\n\n  $({ target: 'JSON', stat: true, forced: FORCED_JSON_STRINGIFY }, {\n    // eslint-disable-next-line no-unused-vars\n    stringify: function stringify(it, replacer, space) {\n      var args = [it];\n      var index = 1;\n      var $replacer;\n      while (arguments.length > index) args.push(arguments[index++]);\n      $replacer = replacer;\n      if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n      if (!isArray(replacer)) replacer = function (key, value) {\n        if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n        if (!isSymbol(value)) return value;\n      };\n      args[1] = replacer;\n      return $stringify.apply(null, args);\n    }\n  });\n}\n\n// `Symbol.prototype[@@toPrimitive]` method\n// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@toprimitive\nif (!$Symbol[PROTOTYPE][TO_PRIMITIVE]) {\n  createNonEnumerableProperty($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n}\n// `Symbol.prototype[@@toStringTag]` property\n// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@tostringtag\nsetToStringTag($Symbol, SYMBOL);\n\nhiddenKeys[HIDDEN] = true;\n","var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar create = require('../internals/object-create');\nvar definePropertyModule = require('../internals/object-define-property');\n\nvar UNSCOPABLES = wellKnownSymbol('unscopables');\nvar ArrayPrototype = Array.prototype;\n\n// Array.prototype[@@unscopables]\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\nif (ArrayPrototype[UNSCOPABLES] == undefined) {\n  definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {\n    configurable: true,\n    value: create(null)\n  });\n}\n\n// add a key to Array.prototype[@@unscopables]\nmodule.exports = function (key) {\n  ArrayPrototype[UNSCOPABLES][key] = true;\n};\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar nativeGetOwnPropertyNames = require('../internals/object-get-own-property-names').f;\n\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return nativeGetOwnPropertyNames(it);\n  } catch (error) {\n    return windowNames.slice();\n  }\n};\n\n// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]'\n    ? getWindowNames(it)\n    : nativeGetOwnPropertyNames(toIndexedObject(it));\n};\n","var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar redefine = require('../internals/redefine');\nvar toString = require('../internals/object-to-string');\n\n// `Object.prototype.toString` method\n// https://tc39.github.io/ecma262/#sec-object.prototype.tostring\nif (!TO_STRING_TAG_SUPPORT) {\n  redefine(Object.prototype, 'toString', toString, { unsafe: true });\n}\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar STRING_ITERATOR = 'String Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);\n\n// `String.prototype[@@iterator]` method\n// https://tc39.github.io/ecma262/#sec-string.prototype-@@iterator\ndefineIterator(String, 'String', function (iterated) {\n  setInternalState(this, {\n    type: STRING_ITERATOR,\n    string: String(iterated),\n    index: 0\n  });\n// `%StringIteratorPrototype%.next` method\n// https://tc39.github.io/ecma262/#sec-%stringiteratorprototype%.next\n}, function next() {\n  var state = getInternalState(this);\n  var string = state.string;\n  var index = state.index;\n  var point;\n  if (index >= string.length) return { value: undefined, done: true };\n  point = charAt(string, index);\n  state.index += point.length;\n  return { value: point, done: false };\n});\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it) && it !== null) {\n    throw TypeError(\"Can't set \" + String(it) + ' as a prototype');\n  } return it;\n};\n","export default {\r\n    RendererColor: 1410703,\r\n    RendererAlpha: 1,\r\n\r\n    CameraFov: 40,\r\n    CameraNear: 1,\r\n    CameraFar: 1e5,\r\n    \r\n    AxesHelper: true,\r\n    AxesSize: 2e5,\r\n}","var __values = (this && this.__values) || function(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n};\r\nimport * as THREE from \"three\";\r\nimport C from \"./config\";\r\nvar WEBGLRenderer = /** @class */ (function () {\r\n    function WEBGLRenderer(parentElem, options) {\r\n        if (options === void 0) { options = {}; }\r\n        this.parentElem = parentElem;\r\n    }\r\n    WEBGLRenderer.prototype.init = function () {\r\n        this.renderer = this.createRenderer();\r\n        this.scene = this.createScene();\r\n        this.camera = this.createCamera();\r\n        this.clock = new THREE.Clock();\r\n        if (C.AxesHelper)\r\n            this.createAxesHelper();\r\n    };\r\n    WEBGLRenderer.prototype.createRenderer = function () {\r\n        var renderer = new THREE.WebGLRenderer({\r\n            antialias: true,\r\n            alpha: true\r\n        });\r\n        renderer.setClearColor(C.RendererColor, C.RendererAlpha);\r\n        renderer.setSize(this.parentElem.clientWidth, this.parentElem.clientHeight);\r\n        this.parentElem.appendChild(renderer.domElement);\r\n        return renderer;\r\n    };\r\n    WEBGLRenderer.prototype.createScene = function () {\r\n        return new THREE.Scene();\r\n    };\r\n    WEBGLRenderer.prototype.createCamera = function () {\r\n        var camera = new THREE.PerspectiveCamera(C.CameraFov, this.parentElem.clientWidth / this.parentElem.clientHeight, C.CameraNear, C.CameraFar);\r\n        camera.position.set(0, 0, 500);\r\n        camera.lookAt(this.scene.position);\r\n        return camera;\r\n    };\r\n    WEBGLRenderer.prototype.createAxesHelper = function () {\r\n        this.scene.add(new THREE.AxesHelper(C.AxesSize));\r\n    };\r\n    WEBGLRenderer.prototype.animate = function () {\r\n        this.animation = requestAnimationFrame(this.animate.bind(this));\r\n        this.renderer.render(this.scene, this.camera);\r\n    };\r\n    WEBGLRenderer.prototype.destroy = function () {\r\n        window.removeEventListener(\"resize\", this.resize);\r\n        this.clearScene();\r\n        this.renderer.renderLists.dispose();\r\n        this.renderer.dispose();\r\n        this.renderer.forceContextLoss();\r\n        // this.renderer.domElement = null\r\n        // this.renderer.content = null\r\n        // this.renderer = null\r\n        cancelAnimationFrame(this.animation);\r\n        THREE.Cache.clear();\r\n    };\r\n    WEBGLRenderer.prototype.clearScene = function () {\r\n        this._removeItem(this.scene);\r\n    };\r\n    WEBGLRenderer.prototype._removeItem = function (item) {\r\n        var _this = this;\r\n        var target = item.children.filter(function (x) { return x; });\r\n        target.forEach(function (item) {\r\n            if (item.children.length) {\r\n                _this._removeItem(item);\r\n            }\r\n            else {\r\n                item.geometry.dispose();\r\n                item.material.dispose();\r\n                item.clear();\r\n            }\r\n        });\r\n        item.clear();\r\n        target = null;\r\n    };\r\n    WEBGLRenderer.prototype.resize = function () { };\r\n    WEBGLRenderer.prototype.registerEventListeners = function () {\r\n        var e_1, _a;\r\n        var eventListeners = this._registerListener();\r\n        for (var eventName in eventListeners) {\r\n            var eventArr = Array.isArray(eventListeners[eventName])\r\n                ? eventListeners[eventName]\r\n                : [eventListeners[eventName]];\r\n            try {\r\n                for (var eventArr_1 = (e_1 = void 0, __values(eventArr)), eventArr_1_1 = eventArr_1.next(); !eventArr_1_1.done; eventArr_1_1 = eventArr_1.next()) {\r\n                    var eventItem = eventArr_1_1.value;\r\n                    this.renderer.domElement.addEventListener(eventName, eventItem.fn);\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (eventArr_1_1 && !eventArr_1_1.done && (_a = eventArr_1.return)) _a.call(eventArr_1);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        }\r\n    };\r\n    WEBGLRenderer.prototype._registerListener = function () {\r\n        var _a;\r\n        var mousewheel = typeof window.onmousewheel === 'object' ? 'mousewheel' : 'DOMMouseScroll';\r\n        return _a = {},\r\n            _a[mousewheel] = {\r\n                fn: function (e) {\r\n                }\r\n            },\r\n            _a.pointerup = {\r\n                fn: function (e) {\r\n                }\r\n            },\r\n            _a.pointermove = {\r\n                fn: function (e) {\r\n                },\r\n            },\r\n            _a;\r\n    };\r\n    return WEBGLRenderer;\r\n}());\r\nexport { WEBGLRenderer };\r\n","import * as THREE from \"three\"\r\nimport { WEBGLRenderer } from \"./base\"\r\nexport class ShaderRenderer extends WEBGLRenderer {\r\n    shader!: THREE.Mesh<THREE.PlaneBufferGeometry, THREE.ShaderMaterial>\r\n    shaderMaterial: any\r\n\r\n    constructor(public parentElem: HTMLElement, options: any = {}){\r\n        super(parentElem,options)\r\n        this.shaderMaterial = options.shader\r\n    }\r\n    init() {\r\n        super.init()\r\n\r\n        this.shader = this.createShader()\r\n\r\n        this.animate()\r\n    }\r\n    \r\n    createShader(){\r\n        const width = this.parentElem.clientWidth\r\n        const height = this.parentElem.clientHeight\r\n        const uniforms = {\r\n            iTime: { value: 1.0 },\r\n            iResolution: { value: new THREE.Vector2(width * 1.0, height * 1.0)},\r\n            iMouse: { value: new THREE.Vector3(0.0, 0.0, 0.0) }\r\n        }\r\n        const material = new THREE.ShaderMaterial( {\r\n            uniforms: uniforms,\r\n            vertexShader: this.shaderMaterial.testVertexShader,\r\n            fragmentShader: this.shaderMaterial.testFragmentShader\r\n        })\r\n        const geom = new THREE.PlaneBufferGeometry(width, height)\r\n        const mesh = new THREE.Mesh( geom, material )\r\n        this.scene.add(mesh)\r\n        return mesh\r\n    }\r\n\r\n    animate(){\r\n        super.animate()\r\n        this.shader.material.uniforms.iTime.value += this.clock.getDelta()\r\n    }\r\n\r\n}","export const testVertexShader = `\r\n    void main() {\r\n        vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n        gl_Position = projectionMatrix * mvPosition;\r\n    }\r\n`;\r\nexport const testFragmentShader = `\r\n    uniform vec3 iResolution; //viewport resolution(in pixels) \r\n    uniform float iTime; //shader playback time (in seconds)\r\n    void main()\r\n    {\r\n        vec2 p = (2.0*gl_FragCoord.xy-iResolution.xy)/iResolution.y;\r\n        float tau = 3.1415926535*2.0;\r\n        float a = atan(p.x,p.y);\r\n        float r = length(p)*0.75;\r\n        vec2 uv = vec2(a/tau,r);\r\n        \r\n        //get the color\r\n        float xCol = (uv.x - (iTime / 3.0)) * 3.0;\r\n        xCol = mod(xCol, 3.0);\r\n        vec3 horColour = vec3(0.25, 0.25, 0.25);\r\n        \r\n        if (xCol < 1.0) {\r\n            \r\n            horColour.r += 1.0 - xCol;\r\n            horColour.g += xCol;\r\n        }\r\n        else if (xCol < 2.0) {\r\n            \r\n            xCol -= 1.0;\r\n            horColour.g += 1.0 - xCol;\r\n            horColour.b += xCol;\r\n        }\r\n        else {\r\n            \r\n            xCol -= 2.0;\r\n            horColour.b += 1.0 - xCol;\r\n            horColour.r += xCol;\r\n        }\r\n\r\n        // draw color beam\r\n        uv = (2.0 * uv) - 1.0;\r\n        float beamWidth = (0.7+0.5*cos(uv.x*10.0*tau*0.15*clamp(floor(5.0 + 10.0*cos(iTime)), 0.0, 10.0))) * abs(1.0 / (30.0 * uv.y));\r\n        vec3 horBeam = vec3(beamWidth);\r\n        gl_FragColor = vec4((( horBeam) * horColour), 1.0);\r\n    }\r\n`;\r\n","export var testVertexShader = \"\\n    void main() {\\n        vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n        gl_Position = projectionMatrix * mvPosition;\\n    }\\n\";\r\nexport var testFragmentShader = \"\\n    uniform vec3 iResolution; //viewport resolution(in pixels) \\n    uniform float iTime; //shader playback time (in seconds)\\n    #define SC 3.0\\n\\n    #if 1\\n    //\\n    // Elegant way to intersect a planar coordinate system (3x3 linear system)\\n    //\\n    vec3 intersectCoordSys( in vec3 o, in vec3 d, vec3 c, vec3 u, vec3 v )\\n    {\\n        vec3 q = o - c;\\n        return vec3(\\n            dot( cross(u,v), q ),\\n            dot( cross(q,u), d ),\\n            dot( cross(v,q), d ) ) / \\n            dot( cross(v,u), d );\\n    }\\n\\n    #else\\n    //\\n    // Ugly (but faster) way to intersect a planar coordinate system: plane + projection\\n    //\\n    vec3 intersectCoordSys( in vec3 o, in vec3 d, vec3 c, vec3 u, vec3 v )\\n    {\\n        vec3  q = o - c;\\n        vec3  n = cross(u,v);\\n        float t = -dot(n,q)/dot(d,n);\\n        float r =  dot(u,q + d*t);\\n        float s =  dot(v,q + d*t);\\n        return vec3(t,s,r);\\n    }\\n\\n    #endif\\t\\n\\n    vec3 hash3( float n )\\n    {\\n        return fract(sin(vec3(n,n+1.0,n+2.0))*vec3(43758.5453123,12578.1459123,19642.3490423));\\n    }\\n\\n    vec3 shade( in vec4 res )\\n    {\\n        float ra = length(res.yz);\\n        float an = atan(res.y,res.z) + 8.0*iTime;\\n        float pa = sin(3.0*an);\\n\\n        vec3 cola = 0.5 + 0.5*sin( (res.w/64.0)*3.5 + vec3(0.0,1.0,2.0) );\\n        \\n        vec3 col = vec3(0.0);\\n        col += cola*0.4*(1.0-smoothstep( 0.90, 1.00, ra) );\\n        col += cola*1.0*(1.0-smoothstep( 0.00, 0.03, abs(ra-0.8)))*(0.5+0.5*pa);\\n        col += cola*1.0*(1.0-smoothstep( 0.00, 0.20, abs(ra-0.8)))*(0.5+0.5*pa);\\n        col += cola*0.5*(1.0-smoothstep( 0.05, 0.10, abs(ra-0.5)))*(0.5+0.5*pa);\\n        col += cola*0.7*(1.0-smoothstep( 0.00, 0.30, abs(ra-0.5)))*(0.5+0.5*pa);\\n\\n        return col*0.3;\\n    }\\n\\n    vec3 render( in vec3 ro, in vec3 rd )\\n    {\\n        // raytrace\\n        vec3 col = vec3( 0.0 );\\n        for( int i=0; i<64; i++ )\\n        {\\n            // position disk\\n            vec3 r = 2.5*(-1.0 + 2.0*hash3( float(i) ));\\n    r *= SC;\\t\\t\\n            // orientate disk\\n            vec3 u = normalize( r.zxy );\\n            vec3 v = normalize( cross( u, vec3(0.0,1.0,0.0 ) ) );\\t\\t\\t\\t\\t\\t   \\n            \\n            // intersect coord sys\\n            vec3 tmp = intersectCoordSys( ro, rd, r, u, v );\\n    tmp /= SC;\\t\\t\\n            if( dot(tmp.yz,tmp.yz)<1.0 && tmp.x>0.0 ) \\n            {\\n                // shade\\t\\t\\t\\n                col += shade( vec4(tmp,float(i)) );\\n            }\\n        }\\n\\n        return col;\\n    }\\n\\n    void main()\\n    {\\n        vec2 q = gl_FragCoord.xy / iResolution.xy;\\n        vec2 p = -1.0 + 2.0 * q;\\n        p.x *= iResolution.x/iResolution.y;\\n\\n        // camera\\n        vec3 ro = 2.0*vec3(cos(0.5*iTime*1.1),0.0,sin(0.5*iTime*1.1));\\n        vec3 ta = vec3(0.0,0.0,0.0);\\n        // camera matrix\\n        vec3 ww = normalize( ta - ro );\\n        vec3 uu = normalize( cross(ww,vec3(0.0,1.0,0.0) ) );\\n        vec3 vv = normalize( cross(uu,ww));\\n        // create view ray\\n        vec3 rd = normalize( p.x*uu + p.y*vv + 1.0*ww );\\n\\n        vec3 col = render( ro*SC, rd );\\n        \\n        gl_FragColor = vec4( col, 1.0 );\\n    }\\n\\n    // void mainVR( out vec4 fragColor, in vec2 fragCoord, in vec3 fragRayOri, in vec3 fragRayDir )\\n    // {\\n    //     vec3 col = render( fragRayOri + vec3(0.0,0.0,0.0), fragRayDir );\\n\\n    //     fragColor = vec4( col, 1.0 );\\n    // }\\n\";\r\n","export var testVertexShader = \"\\n    void main() {\\n        vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n        gl_Position = projectionMatrix * mvPosition;\\n    }\\n\";\r\nexport var testFragmentShader = \"\\n    uniform vec3 iResolution; //viewport resolution(in pixels) \\n    uniform float iTime; //shader playback time (in seconds)\\n    uniform vec4 iMouse; //shader playback time (in seconds)\\n    void main()\\n    {\\n        float gTime = iTime+11.0;\\n\\n        float f = 3., g = 3.;\\n        vec2 res = iResolution.xy;\\n        vec2 mou = iMouse.xy;\\n        if (iMouse.z < 0.5)\\n        {\\n            mou = vec2(sin(gTime * .3)*sin(gTime * .17) * 1. + sin(gTime * .3),(1.0-cos(gTime * .632))*sin(gTime * .131)*1.0+cos(gTime * .3));\\n            mou = (mou+1.0) * res;\\n        }\\n        vec2 z = ((-res+2.0 * gl_FragCoord.xy) / res.y);\\n        vec2 p = ((-res+2.0+mou) / res.y);\\n        for( int i = 0; i < 20; i++) \\n        {\\n            float d = dot(z,z);\\n            z = (vec2( z.x, -z.y ) / d) + p; \\n            z.x =  abs(z.x);\\n            f = max( f, (dot(z-p,z-p) ));\\n            g = min( g, sin(dot(z+p,z+p))+1.0);\\n        }\\n        f = abs(-log(f) / 3.5);\\n        g = abs(-log(g) / 8.0);\\n        gl_FragColor = vec4(min(vec3(g, g*f, f), 1.0),1.0);\\n    }\\n\";\r\n","export const testVertexShader = `\r\n    void main() {\r\n        vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n        gl_Position = projectionMatrix * mvPosition;\r\n    }\r\n`;\r\nexport const testFragmentShader = `\r\n    uniform vec3 iResolution; //viewport resolution(in pixels) \r\n    uniform float iTime; //shader playback time (in seconds)\r\n    #define t iTime\r\n    mat2 m(float a){float c=cos(a), s=sin(a);return mat2(c,-s,s,c);}\r\n    float map(vec3 p){\r\n        p.xz*= m(t*0.4);p.xy*= m(t*0.3);\r\n        vec3 q = p*2.+t;\r\n        return length(p+vec3(sin(t*0.7)))*log(length(p)+1.) + sin(q.x+sin(q.z+sin(q.y)))*0.5 - 1.;\r\n    }\r\n\r\n    void main(){\t\r\n        vec2 p = gl_FragCoord.xy/iResolution.y - vec2(.9,.5);\r\n        vec3 cl = vec3(0.);\r\n        float d = 2.5;\r\n        for(int i=0; i<=5; i++)\t{\r\n            vec3 p = vec3(0,0,5.) + normalize(vec3(p, -1.))*d;\r\n            float rz = map(p);\r\n            float f =  clamp((rz - map(p+.1))*0.5, -.1, 1. );\r\n            vec3 l = vec3(0.1,0.3,.4) + vec3(5., 2.5, 3.)*f;\r\n            cl = cl*l + smoothstep(2.5, .0, rz)*.7*l;\r\n            d += min(rz, 1.);\r\n        }\r\n        gl_FragColor = vec4(cl, 1.);\r\n    }\r\n`;\r\n","export var testVertexShader = \"\\n    void main() {\\n        vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n        gl_Position = projectionMatrix * mvPosition;\\n    }\\n\";\r\nexport var testFragmentShader = \"\\n    uniform vec3 iResolution; //viewport resolution(in pixels) \\n    uniform float iTime; //shader playback time (in seconds)\\n    uniform vec4 iMouse; //mouse pixel coords. xy:current(if MLB down),zw:click\\n    vec3 drawCircle(vec2 pos, float radius, float width, float power, vec4 color)\\n    {\\n        vec2 mousePos = iMouse.xy - vec2(0.5);\\n        float dist1 = length(pos);\\n        dist1 = fract((dist1 * 5.0) - fract(iTime));\\n        float dist2 = dist1 - radius;\\n        float intensity = pow(radius / abs(dist2), width); \\n        vec3 col = color.rgb * intensity * power * max((0.8- abs(dist2)), 0.0);\\n        return col;\\n    }\\n\\n    vec3 hsv2rgb(float h, float s, float v)\\n    {\\n        vec4 t = vec4(1.0, 2.0/3.0, 1.0/3.0, 3.0);\\n        vec3 p = abs(fract(vec3(h) + t.xyz) * 6.0 - vec3(t.w));\\n        return v * mix(vec3(t.x), clamp(p - vec3(t.x), 0.0, 1.0), s);\\n    }\\n\\n    void main()\\n    {\\n        // // -1.0 ~ 1.0\\n        vec2 pos = (gl_FragCoord.xy * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\\n        \\n        float h = mix(0.5, 0.65, length(pos));\\n        vec4 color = vec4(hsv2rgb(h, 1.0, 1.0), 1.0);\\n        float radius = 0.5;\\n        float width = 0.8;\\n        float power = 0.1;\\n        vec3 finalColor = drawCircle(pos, radius, width, power, color);\\n\\n        pos = abs(pos);\\n        // vec3 finalColor = vec3(pos.x, 0.0, pos.y);\\n\\n        gl_FragColor = vec4(finalColor, 1.0);\\n    }\\n\";\r\n","export var testVertexShader = \"\\n    void main() {\\n        vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n        gl_Position = projectionMatrix * mvPosition;\\n    }\\n\";\r\nexport var testFragmentShader = \"\\n    uniform vec3 iResolution; //viewport resolution(in pixels) \\n    uniform float iTime; //shader playback time (in seconds)\\n    #define SHAPE_3D 1\\n\\n    float time = 0.0;\\n\\n    mat2 rot(float a) {\\n    float ca=cos(a);\\n    float sa=sin(a);\\n    return mat2(ca,sa,-sa,ca);  \\n    }\\n\\n    float rnd(float t) {\\n    \\n    return fract(sin(t*425.512)*742.712);\\n    }\\n\\n    float curve(float t, float d) {\\n    t/=d;\\n    return mix(rnd(floor(t)), rnd(floor(t)+1.0), pow(smoothstep(0.0,1.0,fract(t)), 10.0));\\n    }\\n\\n    float box(vec3 p, vec3 s) {\\n    p=abs(p)-s;\\n    return max(p.x, max(p.y,p.z));\\n    }\\n\\n    float map(vec3 p) {\\n    \\n    float t=time*.3 + curve(time, .7)*5.0;\\n    p.xz *= rot(t);\\n    p.yz *= rot(t*.3);\\n    \\n    p = abs(p)-curve(time, .21)*5.0;\\n    p = abs(p)-curve(time, .32)*2.0;\\n    \\n    float d = box(p, vec3(1.0+curve(time, .1)));\\n    \\n    vec3 p2 = p;\\n    float t2 = time;\\n    p2.xy *= rot(t2);\\n    p2.zy *= rot(t2*1.3);\\n    p2 = abs(p2)-curve(time,.4)*3.0;\\n    d = min(d, length(p2.xz)-.2);\\n    \\n    return d;\\n    }\\n\\n    void main()\\n    {\\n    // slowed down the time because there is no music to pump it up\\n    time = mod(iTime*0.3, 300.0);\\n        \\n    vec2 uv = vec2(gl_FragCoord.x / iResolution.x, gl_FragCoord.y / iResolution.y);\\n    uv -= 0.5;\\n    uv /= vec2(iResolution.y / iResolution.x, 1);\\n\\n    vec3 col=vec3(0);\\n    \\n        \\n    #if SHAPE_3D\\n    vec3 s=vec3(0,0,-20);\\n    vec3 r=normalize(vec3(-uv,1));\\n    vec3 p=s;\\n    for(int i=0; i<100; ++i) {\\n        float d=map(p);\\n        if(d<0.001) {\\n        uv += map(p+r)*.14;\\n        break;\\n        }\\n        if(d>100.0) {\\n        break;\\n        }\\n        p+=r*d;\\n    }\\n    \\n    col += 0.1/(0.1+abs(map(p+r)));\\n    #endif\\n    \\n    bool stop = rnd(floor(time*1.0+.3))>0.3;\\n    float ss = 10.0 + floor(pow(curve(time, 3.0),20.0)*100.0);\\n    //if(!stop) uv.x += sin(abs(uv.x+sin(time))+sin(uv.y*10+time)*0.1)*.3;\\n    float off = floor(uv.x*ss)/ss;\\n    if(stop) off=0.0;\\n    \\n    uv.y -= pow(curve(time+rnd(off+.1), .3),4.0)*.3;\\n    uv.x -= (curve(time+rnd(off), .4)-.5)*.1;\\n    \\n    \\n    \\n    \\n    for(float i=0.0; i<30.0; ++i) {\\n        \\n        vec2 p = uv;\\n        float t = time*.7;\\n        float t2 = curve(time + i, 0.7)*3.0;\\n        p *= rot(t+i*.2 + sin(t + i));\\n        p.x-=sin(t2 + i*7.3)*0.3;\\n        p.x += pow(curve(time, .7),4.0)*.7-.3;\\n        \\n        col += vec3(1,0.7-sin(i*3.7)*.3,0.8-sin(i))*0.002*exp(-fract(time+i*.1))/(0.003+abs(p.x));\\n        col += 0.001/(0.003+abs(length(p)-.3));\\n    }\\n    \\n    col *= 0.7+curve(time,.2)*.3;\\n    col = smoothstep(0.0,1.0,col);\\n    col = pow(col, vec3(curve(time*10.0 - length(uv)*10.0,1.0)*3.0+1.0));\\n    \\n    gl_FragColor = vec4(col, 1);\\n    }\\n\";\r\n","export var testVertexShader = \"\\n    void main() {\\n        vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n        gl_Position = projectionMatrix * mvPosition;\\n    }\\n\";\r\nexport var testFragmentShader = \"\\n    uniform vec3 iResolution; //viewport resolution(in pixels) \\n    uniform float iTime; //shader playback time (in seconds)\\n    uniform vec4 iMouse;\\n\\n    precision highp float;\\n\\n\\n    float gTime = 0.;\\n    const float REPEAT = 5.0;\\n\\n    // \\u56DE\\u8EE2\\u884C\\u5217\\n    mat2 rot(float a) {\\n        float c = cos(a), s = sin(a);\\n        return mat2(c,s,-s,c);\\n    }\\n\\n    float sdBox( vec3 p, vec3 b )\\n    {\\n        vec3 q = abs(p) - b;\\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\\n    }\\n\\n    float box(vec3 pos, float scale) {\\n        pos *= scale;\\n        float base = sdBox(pos, vec3(.4,.4,.1)) /1.5;\\n        pos.xy *= 5.;\\n        pos.y -= 3.5;\\n        pos.xy *= rot(.75);\\n        float result = -base;\\n        return result;\\n    }\\n\\n    float box_set(vec3 pos, float iTime) {\\n        vec3 pos_origin = pos;\\n        pos = pos_origin;\\n        pos .y += sin(gTime * 0.4) * 2.5;\\n        pos.xy *=   rot(.8);\\n        float box1 = box(pos,2. - abs(sin(gTime * 0.4)) * 1.5);\\n        pos = pos_origin;\\n        pos .y -=sin(gTime * 0.4) * 2.5;\\n        pos.xy *=   rot(.8);\\n        float box2 = box(pos,2. - abs(sin(gTime * 0.4)) * 1.5);\\n        pos = pos_origin;\\n        pos .x +=sin(gTime * 0.4) * 2.5;\\n        pos.xy *=   rot(.8);\\n        float box3 = box(pos,2. - abs(sin(gTime * 0.4)) * 1.5);\\t\\n        pos = pos_origin;\\n        pos .x -=sin(gTime * 0.4) * 2.5;\\n        pos.xy *=   rot(.8);\\n        float box4 = box(pos,2. - abs(sin(gTime * 0.4)) * 1.5);\\t\\n        pos = pos_origin;\\n        pos.xy *=   rot(.8);\\n        float box5 = box(pos,.5) * 6.;\\t\\n        pos = pos_origin;\\n        float box6 = box(pos,.5) * 6.;\\t\\n        float result = max(max(max(max(max(box1,box2),box3),box4),box5),box6);\\n        return result;\\n    }\\n\\n    float map(vec3 pos, float iTime) {\\n        vec3 pos_origin = pos;\\n        float box_set1 = box_set(pos, iTime);\\n\\n        return box_set1;\\n    }\\n\\n\\n    void main() {\\n        vec2 p = (gl_FragCoord.xy * 2. - iResolution.xy) / min(iResolution.x, iResolution.y);\\n        vec3 ro = vec3(0., -0.2 ,iTime * 4.);\\n        vec3 ray = normalize(vec3(p, 1.5));\\n        ray.xy = ray.xy * rot(sin(iTime * .03) * 5.);\\n        ray.yz = ray.yz * rot(sin(iTime * .05) * .2);\\n        float t = 0.1;\\n        vec3 col = vec3(0.);\\n        float ac = 0.0;\\n\\n\\n        for (int i = 0; i < 99; i++){\\n            vec3 pos = ro + ray * t;\\n            pos = mod(pos-2., 4.) -2.;\\n            gTime = iTime -float(i) * 0.01;\\n            \\n            float d = map(pos, iTime);\\n\\n            d = max(abs(d), 0.01);\\n            ac += exp(-d*23.);\\n\\n            t += d* 0.55;\\n        }\\n\\n        col = vec3(ac * 0.02);\\n\\n        col +=vec3(0.,0.2 * abs(sin(iTime)),0.5 + sin(iTime) * 0.2);\\n\\n\\n        gl_FragColor = vec4(col ,1.0 - t * (0.02 + 0.02 * sin (iTime)));\\n    }\\n\";\r\n","export const testVertexShader = `\r\n    void main() {\r\n        vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n        gl_Position = projectionMatrix * mvPosition;\r\n    }\r\n`;\r\nexport const testFragmentShader = `\r\n    uniform vec3 iResolution; //viewport resolution(in pixels) \r\n    uniform float iTime; //shader playback time (in seconds)\r\n    #define SMOOTH(r,R) (1.0-smoothstep(R-1.0,R+1.0, r))\r\n    #define RANGE(a,b,x) ( step(a,x)*(1.0-step(b,x)) )\r\n    #define RS(a,b,x) ( smoothstep(a-1.0,a+1.0,x)*(1.0-smoothstep(b-1.0,b+1.0,x)) )\r\n    #define M_PI 3.1415926535897932384626433832795\r\n\r\n    #define blue1 vec3(0.74,0.95,1.00)\r\n    #define blue2 vec3(0.87,0.98,1.00)\r\n    #define blue3 vec3(0.35,0.76,0.83)\r\n    #define blue4 vec3(0.953,0.969,0.89)\r\n    #define red   vec3(1.00,0.38,0.227)\r\n\r\n    #define MOV(a,b,c,d,t) (vec2(a*cos(t)+b*cos(0.1*(t)), c*sin(t)+d*cos(0.1*(t))))\r\n\r\n    float movingLine(vec2 uv, vec2 center, float radius)\r\n    {\r\n        //angle of the line\r\n        float theta0 = 90.0 * iTime;\r\n        vec2 d = uv - center;\r\n        float r = sqrt( dot( d, d ) );\r\n        if(r<radius)\r\n        {\r\n            //compute the distance to the line theta=theta0\r\n            vec2 p = radius*vec2(cos(theta0*M_PI/180.0),\r\n                                -sin(theta0*M_PI/180.0));\r\n            float l = length( d - p*clamp( dot(d,p)/dot(p,p), 0.0, 1.0) );\r\n            d = normalize(d);\r\n            //compute gradient based on angle difference to theta0\r\n            float theta = mod(180.0*atan(d.y,d.x)/M_PI+theta0,360.0);\r\n            float gradient = clamp(1.0-theta/90.0,0.0,1.0);\r\n            return SMOOTH(l,1.0)+0.5*gradient;\r\n        }\r\n        else return 0.0;\r\n    }\r\n\r\n    float circle(vec2 uv, vec2 center, float radius, float width)\r\n    {\r\n        float r = length(uv - center);\r\n        return SMOOTH(r-width/2.0,radius)-SMOOTH(r+width/2.0,radius);\r\n    }\r\n\r\n    float circle2(vec2 uv, vec2 center, float radius, float width, float opening)\r\n    {\r\n        vec2 d = uv - center;\r\n        float r = sqrt( dot( d, d ) );\r\n        d = normalize(d);\r\n        if( abs(d.y) > opening )\r\n            return SMOOTH(r-width/2.0,radius)-SMOOTH(r+width/2.0,radius);\r\n        else\r\n            return 0.0;\r\n    }\r\n    float circle3(vec2 uv, vec2 center, float radius, float width)\r\n    {\r\n        vec2 d = uv - center;\r\n        float r = sqrt( dot( d, d ) );\r\n        d = normalize(d);\r\n        float theta = 180.0*(atan(d.y,d.x)/M_PI);\r\n        return smoothstep(2.0, 2.1, abs(mod(theta+2.0,45.0)-2.0)) *\r\n            mix( 0.5, 1.0, step(45.0, abs(mod(theta, 180.0)-90.0)) ) *\r\n            (SMOOTH(r-width/2.0,radius)-SMOOTH(r+width/2.0,radius));\r\n    }\r\n\r\n    float triangles(vec2 uv, vec2 center, float radius)\r\n    {\r\n        vec2 d = uv - center;\r\n        return RS(-8.0, 0.0, d.x-radius) * (1.0-smoothstep( 7.0+d.x-radius,9.0+d.x-radius, abs(d.y)))\r\n            + RS( 0.0, 8.0, d.x+radius) * (1.0-smoothstep( 7.0-d.x-radius,9.0-d.x-radius, abs(d.y)))\r\n            + RS(-8.0, 0.0, d.y-radius) * (1.0-smoothstep( 7.0+d.y-radius,9.0+d.y-radius, abs(d.x)))\r\n            + RS( 0.0, 8.0, d.y+radius) * (1.0-smoothstep( 7.0-d.y-radius,9.0-d.y-radius, abs(d.x)));\r\n    }\r\n\r\n    float _cross(vec2 uv, vec2 center, float radius)\r\n    {\r\n        vec2 d = uv - center;\r\n        int x = int(d.x);\r\n        int y = int(d.y);\r\n        float r = sqrt( dot( d, d ) );\r\n        if( (r<radius) && ( (x==y) || (x==-y) ) )\r\n            return 1.0;\r\n        else return 0.0;\r\n    }\r\n    float dots(vec2 uv, vec2 center, float radius)\r\n    {\r\n        vec2 d = uv - center;\r\n        float r = sqrt( dot( d, d ) );\r\n        if( r <= 2.5 )\r\n            return 1.0;\r\n        if( ( r<= radius) && ( (abs(d.y+0.5)<=1.0) && ( mod(d.x+1.0, 50.0) < 2.0 ) ) )\r\n            return 1.0;\r\n        else if ( (abs(d.y+0.5)<=1.0) && ( r >= 50.0 ) && ( r < 115.0 ) )\r\n            return 0.5;\r\n        else\r\n            return 0.0;\r\n    }\r\n    float bip1(vec2 uv, vec2 center)\r\n    {\r\n        return SMOOTH(length(uv - center),3.0);\r\n    }\r\n    float bip2(vec2 uv, vec2 center)\r\n    {\r\n        float r = length(uv - center);\r\n        float R = 8.0+mod(87.0*iTime, 80.0);\r\n        return (0.5-0.5*cos(30.0*iTime)) * SMOOTH(r,5.0)\r\n            + SMOOTH(6.0,r)-SMOOTH(8.0,r)\r\n            + smoothstep(max(8.0,R-20.0),R,r)-SMOOTH(R,r);\r\n    }\r\n    void main()\r\n    {\r\n        vec3 finalColor;\r\n        vec2 uv = gl_FragCoord.xy;\r\n        //center of the image\r\n        vec2 c = iResolution.xy/2.0;\r\n        finalColor = vec3( 0.3*_cross(uv, c, 240.0) );\r\n        finalColor += ( circle(uv, c, 100.0, 1.0)\r\n                    + circle(uv, c, 165.0, 1.0) ) * blue1;\r\n        finalColor += (circle(uv, c, 240.0, 2.0) );//+ dots(uv,c,240.0)) * blue4;\r\n        finalColor += circle3(uv, c, 313.0, 4.0) * blue1;\r\n        finalColor += triangles(uv, c, 315.0 + 30.0*sin(iTime)) * blue2;\r\n        finalColor += movingLine(uv, c, 240.0) * blue3;\r\n        finalColor += circle(uv, c, 10.0, 1.0) * blue3;\r\n        finalColor += 0.7 * circle2(uv, c, 262.0, 1.0, 0.5+0.2*cos(iTime)) * blue3;\r\n        if( length(uv-c) < 240.0 )\r\n        {\r\n            //animate some bips with random movements\r\n            vec2 p = 130.0*MOV(1.3,1.0,1.0,1.4,3.0+0.1*iTime);\r\n            finalColor += bip1(uv, c+p) * vec3(1,1,1);\r\n            p = 130.0*MOV(0.9,-1.1,1.7,0.8,-2.0+sin(0.1*iTime)+0.15*iTime);\r\n            finalColor += bip1(uv, c+p) * vec3(1,1,1);\r\n            p = 50.0*MOV(1.54,1.7,1.37,1.8,sin(0.1*iTime+7.0)+0.2*iTime);\r\n            finalColor += bip2(uv,c+p) * red;\r\n        }\r\n\r\n        gl_FragColor = vec4( finalColor, 1.0 );\r\n    }\r\n`;\r\n","export const testVertexShader = `\r\n    void main() {\r\n        vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n        gl_Position = projectionMatrix * mvPosition;\r\n    }\r\n`;\r\nexport const testFragmentShader = `\r\n    uniform vec3 iResolution; //viewport resolution(in pixels) \r\n    uniform float iTime; //shader playback time (in seconds)\r\n    float noise(vec3 p) //Thx to Las^Mercury\r\n    {\r\n        vec3 i = floor(p);\r\n        vec4 a = dot(i, vec3(1., 57., 21.)) + vec4(0., 57., 21., 78.);\r\n        vec3 f = cos((p-i)*acos(-1.))*(-.5)+.5;\r\n        a = mix(sin(cos(a)*a),sin(cos(1.+a)*(1.+a)), f.x);\r\n        a.xy = mix(a.xz, a.yw, f.y);\r\n        return mix(a.x, a.y, f.z);\r\n    }\r\n\r\n    float sphere(vec3 p, vec4 spr)\r\n    {\r\n        return length(spr.xyz-p) - spr.w;\r\n    }\r\n\r\n    float flame(vec3 p)\r\n    {\r\n        float d = sphere(p*vec3(1.,.5,1.), vec4(.0,-1.,.0,1.));\r\n        return d + (noise(p+vec3(.0,iTime*2.,.0)) + noise(p*3.)*.5)*.25*(p.y) ;\r\n    }\r\n\r\n    float scene(vec3 p)\r\n    {\r\n        return min(100.-length(p) , abs(flame(p)) );\r\n    }\r\n\r\n    vec4 raymarch(vec3 org, vec3 dir)\r\n    {\r\n        float d = 0.0, glow = 0.0, eps = 0.02;\r\n        vec3  p = org;\r\n        bool glowed = false;\r\n        \r\n        for(int i=0; i<64; i++)\r\n        {\r\n            d = scene(p) + eps;\r\n            p += d * dir;\r\n            if( d>eps )\r\n            {\r\n                if(flame(p) < .0)\r\n                    glowed=true;\r\n                if(glowed)\r\n                    glow = float(i)/64.;\r\n            }\r\n        }\r\n        return vec4(p,glow);\r\n    }\r\n\r\n    void main()\r\n    {\r\n        vec2 v = -1.0 + 2.0 * gl_FragCoord.xy / iResolution.xy;\r\n        v.x *= iResolution.x/iResolution.y;\r\n        \r\n        vec3 org = vec3(0., -2., 4.);\r\n        vec3 dir = normalize(vec3(v.x*1.6, -v.y, -1.5));\r\n        \r\n        vec4 p = raymarch(org, dir);\r\n        float glow = p.w;\r\n        \r\n        vec4 col = mix(vec4(1.,.5,.1,1.), vec4(0.1,.5,1.,1.), p.y*.02+.4);\r\n        \r\n        gl_FragColor = mix(vec4(0.), col, pow(glow*2.,4.));\r\n        //gl_FragColor = mix(vec4(1.), mix(vec4(1.,.5,.1,1.),vec4(0.1,.5,1.,1.),p.y*.02+.4), pow(glow*2.,4.));\r\n\r\n    }\r\n`;\r\n","export var testVertexShader = \"\\n    void main() {\\n        vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n        gl_Position = projectionMatrix * mvPosition;\\n    }\\n\";\r\nexport var testFragmentShader = \"\\n    uniform vec3 iResolution; //viewport resolution(in pixels) \\n    uniform float iTime; //shader playback time (in seconds)\\n    \\n    #define TAU 6.28318530718\\n    #define MAX_ITER 5\\n\\n    void main() \\n    {\\n        float time = iTime * .5+23.0;\\n        // uv should be the 0-1 uv of texture...\\n        vec2 uv = gl_FragCoord.xy / iResolution.xy;\\n        \\n    #ifdef SHOW_TILING\\n        vec2 p = mod(uv*TAU*2.0, TAU)-250.0;\\n    #else\\n        vec2 p = mod(uv*TAU, TAU)-250.0;\\n    #endif\\n        vec2 i = vec2(p);\\n        float c = 1.0;\\n        float inten = .005;\\n\\n        for (int n = 0; n < MAX_ITER; n++) \\n        {\\n            float t = time * (1.0 - (3.5 / float(n+1)));\\n            i = p + vec2(cos(t - i.x) + sin(t + i.y), sin(t - i.y) + cos(t + i.x));\\n            c += 1.0/length(vec2(p.x / (sin(i.x+t)/inten),p.y / (cos(i.y+t)/inten)));\\n        }\\n        c /= float(MAX_ITER);\\n        c = 1.17-pow(c, 1.4);\\n        vec3 colour = vec3(pow(abs(c), 8.0));\\n        colour = clamp(colour + vec3(0.0, 0.35, 0.5), 0.0, 1.0);\\n        \\n\\n        #ifdef SHOW_TILING\\n        // Flash tile borders...\\n        vec2 pixel = 2.0 / iResolution.xy;\\n        uv *= 2.0;\\n\\n        float f = floor(mod(iTime*.5, 2.0)); \\t// Flash value.\\n        vec2 first = step(pixel, uv) * f;\\t\\t   \\t// Rule out first screen pixels and flash.\\n        uv  = step(fract(uv), pixel);\\t\\t\\t\\t// Add one line of pixels per tile.\\n        colour = mix(colour, vec3(1.0, 1.0, 0.0), (uv.x + uv.y) * first.x * first.y); // Yellow line\\n        \\n        #endif\\n        gl_FragColor = vec4(colour, 1.0);\\n    }\\n\";\r\n","export var testVertexShader = \"\\n    void main() {\\n        vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n        gl_Position = projectionMatrix * mvPosition;\\n    }\\n\";\r\nexport var testFragmentShader = \"\\n    uniform vec3 iResolution; //viewport resolution(in pixels) \\n    uniform float iTime; //shader playback time (in seconds)\\n    void main()\\n    {\\n        vec2 uv = (gl_FragCoord.xy / iResolution.xy) - .5;\\n        float t = iTime * .1 + ((.25 + .05 * sin(iTime * .1))/(length(uv.xy) + .07)) * 2.2;\\n        float si = sin(t);\\n        float co = cos(t);\\n        mat2 ma = mat2(co, si, -si, co);\\n\\n        float v1, v2, v3;\\n        v1 = v2 = v3 = 0.0;\\n        \\n        float s = 0.0;\\n        for (int i = 0; i < 100; i++)\\n        {\\n            vec3 p = s * vec3(uv, 0.0);\\n            p.xy *= ma;\\n            p += vec3(.22, .3, s - 1.5 - sin(iTime * .13) * .1);\\n            for (int i = 0; i < 8; i++)\\tp = abs(p) / dot(p,p) - 0.659;\\n            v1 += dot(p,p) * .0015 * (1.8 + sin(length(uv.xy * 13.0) + .5  - iTime * .2));\\n            v2 += dot(p,p) * .0013 * (1.5 + sin(length(uv.xy * 14.5) + 1.2 - iTime * .3));\\n            v3 += length(p.xy*10.) * .0003;\\n            s  += .035;\\n        }\\n        \\n        float len = length(uv);\\n        v1 *= smoothstep(.7, .0, len);\\n        v2 *= smoothstep(.5, .0, len);\\n        v3 *= smoothstep(.9, .0, len);\\n        \\n        vec3 col = vec3( v3 * (1.5 + sin(iTime * .2) * .4),\\n                        (v1 + v3) * .3,\\n                        v2) + smoothstep(0.2, .0, len) * .85 + smoothstep(.0, .6, v3) * .3;\\n\\n        gl_FragColor=vec4(min(pow(abs(col), vec3(1.2)), 1.0), 1.0);\\n    }\\n\";\r\n","export var testVertexShader = \"\\n    void main() {\\n        vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n        gl_Position = projectionMatrix * mvPosition;\\n    }\\n\";\r\nexport var testFragmentShader = \"\\n    uniform vec3 iResolution; //viewport resolution(in pixels) \\n    uniform float iTime; //shader playback time (in seconds)\\n    uniform vec4 iMouse; //shader playback time (in seconds)\\n#define MODEL_ROTATION vec2(.3, .25)\\n#define CAMERA_ROTATION vec2(.5, .5)\\n\\n// 0: Defaults\\n// 1: Model\\n// 2: Camera\\n#define MOUSE_CONTROL 1\\n\\n//#define DEBUG\\n\\n// 1, 2, or 3\\n//#define LOOP 1\\n\\n\\n// --------------------------------------------------------\\n// HG_SDF\\n// https://www.shadertoy.com/view/Xs3GRB\\n// --------------------------------------------------------\\n\\nvoid pR(inout vec2 p, float a) {\\n    p = cos(a)*p + sin(a)*vec2(p.y, -p.x);\\n}\\n\\nfloat pReflect(inout vec3 p, vec3 planeNormal, float offset) {\\n    float t = dot(p, planeNormal)+offset;\\n    if (t < 0.) {\\n        p = p - (2.*t)*planeNormal;\\n    }\\n    return sign(t);\\n}\\n\\nfloat smax(float a, float b, float r) {\\n    float m = max(a, b);\\n    if ((-a < r) && (-b < r)) {\\n        return max(m, -(r - sqrt((r+a)*(r+a) + (r+b)*(r+b))));\\n    } else {\\n        return m;\\n    }\\n}\\n\\n\\n// --------------------------------------------------------\\n// Icosahedron domain mirroring\\n// Adapted from knighty https://www.shadertoy.com/view/MsKGzw\\n// --------------------------------------------------------\\n\\n#define PI 3.14159265359\\n\\nvec3 facePlane;\\nvec3 uPlane;\\nvec3 vPlane;\\n\\nint Type=5;\\nvec3 nc;\\nvec3 pab;\\nvec3 pbc;\\nvec3 pca;\\n\\nvoid initIcosahedron() {//setup folding planes and vertex\\n    float cospin=cos(PI/float(Type)), scospin=sqrt(0.75-cospin*cospin);\\n    nc=vec3(-0.5,-cospin,scospin);//3rd folding plane. The two others are xz and yz planes\\n    pbc=vec3(scospin,0.,0.5);//No normalization in order to have 'barycentric' coordinates work evenly\\n    pca=vec3(0.,scospin,cospin);\\n    pbc=normalize(pbc); pca=normalize(pca);//for slightly better DE. In reality it's not necesary to apply normalization :)\\n\\tpab=vec3(0,0,1);\\n    \\n    facePlane = pca;\\n    uPlane = cross(vec3(1,0,0), facePlane);\\n    vPlane = vec3(1,0,0);\\n}\\n\\nvoid pModIcosahedron(inout vec3 p) {\\n    p = abs(p);\\n    pReflect(p, nc, 0.);\\n    p.xy = abs(p.xy);\\n    pReflect(p, nc, 0.);\\n    p.xy = abs(p.xy);\\n    pReflect(p, nc, 0.);\\n}\\n\\n\\n// --------------------------------------------------------\\n// Triangle tiling\\n// Adapted from mattz https://www.shadertoy.com/view/4d2GzV\\n// --------------------------------------------------------\\n\\nconst float sqrt3 = 1.7320508075688772;\\nconst float i3 = 0.5773502691896258;\\n\\nconst mat2 cart2hex = mat2(1, 0, i3, 2. * i3);\\nconst mat2 hex2cart = mat2(1, 0, -.5, .5 * sqrt3);\\n\\n#define PHI (1.618033988749895)\\n#define TAU 6.283185307179586\\n\\nstruct TriPoints {\\n\\tvec2 a;\\n    vec2 b;\\n    vec2 c;\\n    vec2 center;\\n    vec2 ab;\\n    vec2 bc;\\n    vec2 ca;\\n};\\n\\nTriPoints closestTriPoints(vec2 p) {    \\n    vec2 pTri = cart2hex * p;\\n    vec2 pi = floor(pTri);\\n    vec2 pf = fract(pTri);\\n    \\n    float split1 = step(pf.y, pf.x);\\n    float split2 = step(pf.x, pf.y);\\n    \\n    vec2 a = vec2(split1, 1);\\n    vec2 b = vec2(1, split2);\\n    vec2 c = vec2(0, 0);\\n\\n    a += pi;\\n    b += pi;\\n    c += pi;\\n\\n    a = hex2cart * a;\\n    b = hex2cart * b;\\n    c = hex2cart * c;\\n    \\n    vec2 center = (a + b + c) / 3.;\\n    \\n\\tvec2 ab = (a + b) / 2.;\\n    vec2 bc = (b + c) / 2.;\\n    vec2 ca = (c + a) / 2.;\\n\\n    return TriPoints(a, b, c, center, ab, bc, ca);\\n}\\n\\n\\n// --------------------------------------------------------\\n// Geodesic tiling\\n// --------------------------------------------------------\\n\\nstruct TriPoints3D {\\n\\tvec3 a;\\n    vec3 b;\\n    vec3 c;\\n\\tvec3 center;\\n    vec3 ab;\\n    vec3 bc;\\n    vec3 ca;\\n};\\n\\nvec3 intersection(vec3 n, vec3 planeNormal, float planeOffset) {\\n    float denominator = dot(planeNormal, n);\\n    float t = (dot(vec3(0), planeNormal ) + planeOffset) / -denominator;\\n    return n * t;\\n}\\n\\n//// Edge length of an icosahedron with an inscribed sphere of radius of 1\\n//float edgeLength = 1. / ((sqrt(3.) / 12.) * (3. + sqrt(5.)));\\n//// Inner radius of the icosahedron's face\\n//float faceRadius = (1./6.) * sqrt(3.) * edgeLength;\\nfloat faceRadius = 0.3819660112501051;\\n\\n// 2D coordinates on the icosahedron face\\nvec2 icosahedronFaceCoordinates(vec3 p) {\\n    vec3 pn = normalize(p);\\n    vec3 i = intersection(pn, facePlane, -1.);\\n    return vec2(dot(i, uPlane), dot(i, vPlane));\\n}\\n\\n// Project 2D icosahedron face coordinates onto a sphere\\nvec3 faceToSphere(vec2 facePoint) {\\n\\treturn normalize(facePlane + (uPlane * facePoint.x) + (vPlane * facePoint.y));\\n}\\n\\nTriPoints3D geodesicTriPoints(vec3 p, float subdivisions) {\\n    // Get 2D cartesian coordiantes on that face\\n    vec2 uv = icosahedronFaceCoordinates(p);\\n    \\n    // Get points on the nearest triangle tile\\n\\tfloat uvScale = subdivisions / faceRadius / 2.;\\n    TriPoints points = closestTriPoints(uv * uvScale);\\n    \\n    // Project 2D triangle coordinates onto a sphere \\n    vec3 a = faceToSphere(points.a / uvScale);\\n    vec3 b = faceToSphere(points.b / uvScale);\\n    vec3 c = faceToSphere(points.c / uvScale);\\n    vec3 center = faceToSphere(points.center / uvScale);\\n    vec3 ab = faceToSphere(points.ab / uvScale);\\n    vec3 bc = faceToSphere(points.bc / uvScale);\\n    vec3 ca = faceToSphere(points.ca / uvScale);\\n    \\n    return TriPoints3D(a, b, c, center, ab, bc, ca);\\n}\\n\\n\\n// --------------------------------------------------------\\n// Spectrum colour palette\\n// IQ https://www.shadertoy.com/view/ll2GD3\\n// --------------------------------------------------------\\n\\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d ) {\\n    return a + b*cos( 6.28318*(c*t+d) );\\n}\\n\\nvec3 spectrum(float n) {\\n    return pal( n, vec3(0.5,0.5,0.5),vec3(0.5,0.5,0.5),vec3(1.0,1.0,1.0),vec3(0.0,0.33,0.67) );\\n}\\n\\n\\n// --------------------------------------------------------\\n// Model/Camera Rotation\\n// --------------------------------------------------------\\n\\nmat3 sphericalMatrix(float theta, float phi) {\\n    float cx = cos(theta);\\n    float cy = cos(phi);\\n    float sx = sin(theta);\\n    float sy = sin(phi);\\n    return mat3(\\n        cy, -sy * -sx, -sy * cx,\\n        0, cx, sx,\\n        sy, cy * -sx, cy * cx\\n    );\\n}\\n\\nmat3 mouseRotation(bool enable, vec2 xy) {\\n    if (enable) {\\n        vec2 mouse = iMouse.xy / iResolution.xy;\\n\\n        if (mouse.x != 0. && mouse.y != 0.) {\\n            xy.x = mouse.x;\\n            xy.y = mouse.y;\\n        }\\n    }\\n    float rx, ry;\\n    \\n    rx = (xy.y + .5) * PI;\\n    ry = (-xy.x) * 2. * PI;\\n    \\n    return sphericalMatrix(rx, ry);\\n}\\n\\nmat3 modelRotation() {\\n    mat3 m = mouseRotation(MOUSE_CONTROL==1, MODEL_ROTATION);\\n    return m;\\n}\\n\\nmat3 cameraRotation() {\\n    mat3 m = mouseRotation(MOUSE_CONTROL==2, CAMERA_ROTATION);\\n    return m;\\n}\\n\\n\\n// --------------------------------------------------------\\n// Animation \\n// --------------------------------------------------------\\n\\nconst float SCENE_DURATION = 6.;\\nconst float CROSSFADE_DURATION = 2.;\\n\\nfloat time;\\n\\nstruct HexSpec {\\n    float roundTop;\\n    float roundCorner;\\n\\tfloat height;\\n    float thickness;\\n    float gap;    \\n};\\n    \\nHexSpec newHexSpec(float subdivisions) {\\n\\treturn HexSpec(\\n        .05 / subdivisions,\\n        .1 / subdivisions,\\n        2.,\\n        2.,\\n        .005\\n    );\\n}\\n    \\n// Animation 1\\n    \\nfloat animSubdivisions1() {\\n\\treturn mix(2.4, 3.4, cos(time * PI) * .5 + .5);\\n}\\n\\nHexSpec animHex1(vec3 hexCenter, float subdivisions) {\\n    HexSpec spec = newHexSpec(subdivisions);\\n    \\n    float offset = time * 3. * PI;\\n    offset -= subdivisions;\\n    float blend = dot(hexCenter, pca);\\n    blend = cos(blend * 30. + offset) * .5 + .5;\\n    spec.height = mix(1.75, 2., blend);\\n\\n    spec.thickness = spec.height;\\n\\n    return spec;\\n}\\n\\n// Animation 2\\n\\nfloat animSubdivisions2() {\\n    return mix(1., 2.3, sin(time * PI/2.) * .5 + .5);\\n}\\n\\nHexSpec animHex2(vec3 hexCenter, float subdivisions) {\\n    HexSpec spec = newHexSpec(subdivisions);\\n    \\n    float blend = hexCenter.y;\\n    spec.height = mix(1.6, 2., sin(blend * 10. + time * PI) * .5 + .5);\\n    \\n    spec.roundTop = .02 / subdivisions;\\n    spec.roundCorner = .09 / subdivisions;\\n    spec.thickness = spec.roundTop * 4.;\\n    spec.gap = .01;\\n\\n    return spec;\\n}\\n\\n// Animation 3\\n\\nfloat animSubdivisions3() {\\n\\treturn 5.;\\n}\\n\\nHexSpec animHex3(vec3 hexCenter, float subdivisions) {\\n    HexSpec spec = newHexSpec(subdivisions);\\n    \\n    float blend = acos(dot(hexCenter, pab)) * 10.;\\n    blend = cos(blend + time * PI) * .5 + .5;\\n    spec.gap = mix(.01, .4, blend) / subdivisions;\\n\\n    spec.thickness = spec.roundTop * 2.;\\n\\n\\treturn spec;\\n}\\n\\n// Transition between animations\\n\\nfloat sineInOut(float t) {\\n  return -0.5 * (cos(PI * t) - 1.0);\\n}\\n\\nfloat transitionValues(float a, float b, float c) {\\n    #ifdef LOOP\\n        #if LOOP == 1\\n            return a;\\n        #endif\\n        #if LOOP == 2\\n            return b;\\n        #endif\\n        #if LOOP == 3\\n            return c;\\n        #endif\\n    #endif\\n    float t = time / SCENE_DURATION;\\n    float scene = floor(mod(t, 3.));\\n    float blend = fract(t);\\n    float delay = (SCENE_DURATION - CROSSFADE_DURATION) / SCENE_DURATION;\\n    blend = max(blend - delay, 0.) / (1. - delay);\\n    blend = sineInOut(blend);\\n    float ab = mix(a, b, blend);\\n    float bc = mix(b, c, blend);\\n    float cd = mix(c, a, blend);\\n    float result = mix(ab, bc, min(scene, 1.));\\n    result = mix(result, cd, max(scene - 1., 0.));\\n    return result;\\n}\\n \\nHexSpec transitionHexSpecs(HexSpec a, HexSpec b, HexSpec c) {\\n    float roundTop = transitionValues(a.roundTop, b.roundTop, c.roundTop);\\n    float roundCorner = transitionValues(a.roundCorner, b.roundCorner, c.roundCorner);\\n\\tfloat height = transitionValues(a.height, b.height, c.height);\\n    float thickness = transitionValues(a.thickness, b.thickness, c.thickness);\\n    float gap = transitionValues(a.gap, b.gap, c.gap);\\n\\treturn HexSpec(roundTop, roundCorner, height, thickness, gap);\\n}\\n\\n\\n// --------------------------------------------------------\\n// Modelling \\n// --------------------------------------------------------\\n\\nconst vec3 FACE_COLOR = vec3(.9,.9,1.);\\nconst vec3 BACK_COLOR = vec3(.1,.1,.15);\\nconst vec3 BACKGROUND_COLOR = vec3(.0, .005, .03);\\n\\nstruct Model {\\n    float dist;\\n    vec3 albedo;\\n    float glow;\\n};\\n\\nModel hexModel(\\n    vec3 p,\\n    vec3 hexCenter,\\n    vec3 edgeA,\\n    vec3 edgeB,\\n    HexSpec spec\\n) {\\n    float d;\\n\\n    float edgeADist = dot(p, edgeA) + spec.gap;\\n    float edgeBDist = dot(p, edgeB) - spec.gap;\\n    float edgeDist = smax(edgeADist, -edgeBDist, spec.roundCorner);\\n\\n    float outerDist = length(p) - spec.height;\\n    d = smax(edgeDist, outerDist, spec.roundTop);\\n\\n    float innerDist = length(p) - spec.height + spec.thickness;\\n    d = smax(d, -innerDist, spec.roundTop);\\n    \\n    vec3 color;\\n\\n    float faceBlend = (spec.height - length(p)) / spec.thickness;\\n    faceBlend = clamp(faceBlend, 0., 1.);\\n    color = mix(FACE_COLOR, BACK_COLOR, step(.5, faceBlend));\\n    \\n    vec3 edgeColor = spectrum(dot(hexCenter, pca) * 5. + length(p) + .8);    \\n\\tfloat edgeBlend = smoothstep(-.04, -.005, edgeDist);\\n    color = mix(color, edgeColor, edgeBlend); \\n\\n    return Model(d, color, edgeBlend);\\n}\\n\\n// checks to see which intersection is closer\\nModel opU( Model m1, Model m2 ){\\n    if (m1.dist < m2.dist) {\\n        return m1;\\n    } else {\\n        return m2;\\n    }\\n}\\n\\nModel geodesicModel(vec3 p) {\\n\\n    pModIcosahedron(p);\\n    \\n    float subdivisions = transitionValues(\\n        animSubdivisions1(),\\n        animSubdivisions2(),\\n        animSubdivisions3()\\n   \\t);\\n\\tTriPoints3D points = geodesicTriPoints(p, subdivisions);\\n        \\n\\tvec3 edgeAB = normalize(cross(points.center, points.ab));\\n\\tvec3 edgeBC = normalize(cross(points.center, points.bc));\\n    vec3 edgeCA = normalize(cross(points.center, points.ca));\\n    \\n    Model model, part;\\n    HexSpec spec;\\n\\n\\tspec = transitionHexSpecs(\\n        animHex1(points.b, subdivisions),\\n        animHex2(points.b, subdivisions),\\n        animHex3(points.b, subdivisions)\\n    );\\n    part = hexModel(p, points.b, edgeAB, edgeBC, spec);\\n    model = part;\\n\\n\\tspec = transitionHexSpecs(\\n        animHex1(points.c, subdivisions),\\n        animHex2(points.c, subdivisions),\\n        animHex3(points.c, subdivisions)\\n    );\\n    part = hexModel(p, points.c, edgeBC, edgeCA, spec);\\n    model = opU(model, part);\\n    \\n\\tspec = transitionHexSpecs(\\n        animHex1(points.a, subdivisions),\\n        animHex2(points.a, subdivisions),\\n        animHex3(points.a, subdivisions)\\n    );\\n    part = hexModel(p, points.a, edgeCA, edgeAB, spec);\\n    model = opU(model, part);\\n    \\n\\treturn model;\\n}\\n\\nModel map( vec3 p ){\\n    mat3 m = modelRotation();\\n    p *= m;  \\n    #ifndef LOOP\\n    \\tpR(p.xz, time * PI/16.);\\n    #endif\\n    Model model = geodesicModel(p);\\n    return model;\\n}\\n\\n// --------------------------------------------------------\\n// LIGHTING\\n// Adapted from IQ https://www.shadertoy.com/view/Xds3zN\\n// --------------------------------------------------------\\n\\nvec3 doLighting(Model model, vec3 pos, vec3 nor, vec3 ref, vec3 rd) {\\n    vec3 lightPos = normalize(vec3(.5,.5,-1.));\\n    vec3 backLightPos = normalize(vec3(-.5,-.3,1));\\n    vec3 ambientPos = vec3(0,1,0);\\n    \\n    vec3  lig = lightPos;\\n    float amb = clamp((dot(nor, ambientPos) + 1.) / 2., 0., 1.);\\n    float dif = clamp( dot( nor, lig ), 0.0, 1.0 );\\n    float bac = pow(clamp(dot(nor, backLightPos), 0., 1.), 1.5);\\n    float fre = pow( clamp(1.0+dot(nor,rd),0.0,1.0), 2.0 );\\n    \\n    vec3 lin = vec3(0.0);\\n    lin += 1.20 * dif * vec3(.9);\\n    lin += 0.80 * amb * vec3(.5, .7, .8);\\n    lin += 0.30 * bac * vec3(.25);\\n    lin += 0.20 * fre * vec3(1);\\n    \\n    vec3 albedo = model.albedo;\\n    vec3 col = mix(albedo * lin, albedo, model.glow);    \\n\\n    return col;\\n}   \\n\\n\\n// --------------------------------------------------------\\n// Ray Marching\\n// Adapted from cabbibo https://www.shadertoy.com/view/Xl2XWt\\n// --------------------------------------------------------\\n\\nconst float MAX_TRACE_DISTANCE = 8.; // max trace distance\\nconst float INTERSECTION_PRECISION = .001; // precision of the intersection\\nconst int NUM_OF_TRACE_STEPS = 100;\\nconst float FUDGE_FACTOR = .9; // Default is 1, reduce to fix overshoots\\n\\nstruct CastRay {\\n    vec3 origin;\\n    vec3 direction;\\n};\\n\\nstruct Ray {\\n    vec3 origin;\\n    vec3 direction;\\n    float len;\\n};\\n\\nstruct Hit {\\n    Ray ray;\\n    Model model;\\n    vec3 pos;\\n    bool isBackground;\\n    vec3 normal;\\n    vec3 color;\\n};\\n\\nvec3 calcNormal( in vec3 pos ){\\n    vec3 eps = vec3( 0.001, 0.0, 0.0 );\\n    vec3 nor = vec3(\\n        map(pos+eps.xyy).dist - map(pos-eps.xyy).dist,\\n        map(pos+eps.yxy).dist - map(pos-eps.yxy).dist,\\n        map(pos+eps.yyx).dist - map(pos-eps.yyx).dist );\\n    return normalize(nor);\\n}\\n    \\nHit raymarch(CastRay castRay){\\n\\n    float currentDist = INTERSECTION_PRECISION * 2.0;\\n    Model model;\\n    \\n    Ray ray = Ray(castRay.origin, castRay.direction, 0.);\\n\\n    for( int i=0; i< NUM_OF_TRACE_STEPS ; i++ ){\\n        if (currentDist < INTERSECTION_PRECISION || ray.len > MAX_TRACE_DISTANCE) {\\n            break;\\n        }\\n        model = map(ray.origin + ray.direction * ray.len);\\n        currentDist = model.dist;\\n        ray.len += currentDist * FUDGE_FACTOR;\\n    }\\n    \\n    bool isBackground = false;\\n    vec3 pos = vec3(0);\\n    vec3 normal = vec3(0);\\n    vec3 color = vec3(0);\\n    \\n    if (ray.len > MAX_TRACE_DISTANCE) {\\n        isBackground = true;\\n    } else {\\n        pos = ray.origin + ray.direction * ray.len;\\n        normal = calcNormal(pos);\\n    }\\n\\n    return Hit(ray, model, pos, isBackground, normal, color);\\n}\\n\\n\\n// --------------------------------------------------------\\n// Rendering\\n// --------------------------------------------------------\\n\\nvoid shadeSurface(inout Hit hit){\\n    \\n    vec3 color = BACKGROUND_COLOR;\\n    \\n    if (hit.isBackground) {\\n        hit.color = color;\\n        return;\\n    }\\n\\n    vec3 ref = reflect(hit.ray.direction, hit.normal);\\n\\n    #ifdef DEBUG\\n        color = hit.normal * 0.5 + 0.5;\\n    #else \\n        color = doLighting(\\n            hit.model,\\n            hit.pos,\\n            hit.normal,\\n            ref,\\n            hit.ray.direction\\n        );\\n    #endif\\n\\n    hit.color = color;\\n}\\n\\nvec3 render(Hit hit){\\n    shadeSurface(hit);\\n\\treturn hit.color;\\n}\\n\\n\\n// --------------------------------------------------------\\n// Camera\\n// https://www.shadertoy.com/view/Xl2XWt\\n// --------------------------------------------------------\\n\\nmat3 calcLookAtMatrix( in vec3 ro, in vec3 ta, in float roll )\\n{\\n    vec3 ww = normalize( ta - ro );\\n    vec3 uu = normalize( cross(ww,vec3(sin(roll),cos(roll),0.0) ) );\\n    vec3 vv = normalize( cross(uu,ww));\\n    return mat3( uu, vv, ww );\\n}\\n\\nvoid doCamera(out vec3 camPos, out vec3 camTar, out float camRoll, in float time, in vec2 mouse) {\\n    float dist = 5.5;\\n    camRoll = 0.;\\n    camTar = vec3(0,0,0);\\n    camPos = vec3(0,0,-dist);\\n    camPos *= cameraRotation();\\n    camPos += camTar;\\n}\\n\\n\\n// --------------------------------------------------------\\n// Gamma\\n// https://www.shadertoy.com/view/Xds3zN\\n// --------------------------------------------------------\\n\\nconst float GAMMA = 2.2;\\n\\nvec3 gamma(vec3 color, float g) {\\n    return pow(color, vec3(g));\\n}\\n\\nvec3 linearToScreen(vec3 linearRGB) {\\n    return gamma(linearRGB, 1.0 / GAMMA);\\n}\\n\\nvoid main()\\n{\\n    time = iTime;\\n\\n    #ifdef LOOP\\n        #if LOOP == 1\\n            time = mod(time, 2.);   \\n        #endif\\n        #if LOOP == 2\\n            time = mod(time, 4.);   \\n        #endif\\n        #if LOOP == 3\\n            time = mod(time, 2.);\\n    \\t#endif\\n    #endif\\n    \\n    initIcosahedron();\\n    \\n    vec2 p = (-iResolution.xy + 2.0*gl_FragCoord.xy)/iResolution.y;\\n    vec2 m = iMouse.xy / iResolution.xy;\\n\\n    vec3 camPos = vec3( 0., 0., 2.);\\n    vec3 camTar = vec3( 0. , 0. , 0. );\\n    float camRoll = 0.;\\n    \\n    // camera movement\\n    doCamera(camPos, camTar, camRoll, iTime, m);\\n    \\n    // camera matrix\\n    mat3 camMat = calcLookAtMatrix( camPos, camTar, camRoll );  // 0.0 is the camera roll\\n    \\n    // create view ray\\n    vec3 rd = normalize( camMat * vec3(p.xy,2.0) ); // 2.0 is the lens length\\n    \\n    Hit hit = raymarch(CastRay(camPos, rd));\\n\\n    vec3 color = render(hit);\\n    \\n    #ifndef DEBUG\\n        color = linearToScreen(color);\\n    #endif\\n\\n    gl_FragColor = vec4(color,1.0);\\n}\\n\";\r\n","export var testVertexShader = \"\\n    void main() {\\n        vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n        gl_Position = projectionMatrix * mvPosition;\\n    }\\n\";\r\nexport var testFragmentShader = \"\\n    uniform vec3 iResolution; //viewport resolution(in pixels) \\n    uniform float iTime; //shader playback time (in seconds)\\n\\n    struct Ray {\\n        vec3 origin;\\n        vec3 direction;\\n    };\\n\\n    struct Light {\\n        vec3 color;\\n        vec3 direction;\\n    };\\n\\n    struct Material {\\n        vec3 color;\\n        float diffuse;\\n        float specular;\\n    };\\n\\n    struct Intersect {\\n        float len;\\n        vec3 normal;\\n        Material material;\\n    };\\n\\n    struct Sphere {\\n        float radius;\\n        vec3 position;\\n        Material material;\\n    };\\n\\n    struct Plane {\\n        vec3 normal;\\n        Material material;\\n    };\\n\\n    const float epsilon = 1e-3;\\n\\n    const int iterations = 16;\\n\\n    const float exposure = 1e-2;\\n    const float gamma = 2.2;\\n    const float intensity = 100.0;\\n    const vec3 ambient = vec3(0.6, 0.8, 1.0) * intensity / gamma;\\n\\n    Light light = Light(vec3(1.0) * intensity, normalize(vec3(-1.0, 0.75, 1.0)));\\n\\n    const Intersect miss = Intersect(0.0, vec3(0.0), Material(vec3(0.0), 0.0, 0.0));\\n\\n    Intersect intersect(Ray ray, Sphere sphere) {\\n        vec3 oc = sphere.position - ray.origin;\\n        float l = dot(ray.direction, oc);\\n        float det = pow(l, 2.0) - dot(oc, oc) + pow(sphere.radius, 2.0);\\n        if (det < 0.0) return miss;\\n\\n        // Find the Closer of Two Solutions\\n                float len = l - sqrt(det);\\n        if (len < 0.0) len = l + sqrt(det);\\n        if (len < 0.0) return miss;\\n        return Intersect(len, (ray.origin + len*ray.direction - sphere.position) / sphere.radius, sphere.material);\\n    }\\n\\n    Intersect intersect(Ray ray, Plane plane) {\\n        float len = -dot(ray.origin, plane.normal) / dot(ray.direction, plane.normal);\\n        if (len < 0.0) return miss;\\n        return Intersect(len, plane.normal, plane.material);\\n    }\\n\\n    Intersect trace(Ray ray) {\\n        const int num_spheres = 3;\\n        Sphere spheres[num_spheres];\\n\\n        spheres[0] = Sphere(2.0, vec3(-4.0, 3.0 + sin(iTime), 0), Material(vec3(1.0, 0.0, 0.2), 1.0, 0.001));\\n        spheres[1] = Sphere(3.0, vec3( 4.0 + cos(iTime), 3.0, 0), Material(vec3(0.0, 0.2, 1.0), 1.0, 0.0));\\n        spheres[2] = Sphere(1.0, vec3( 0.5, 1.0, 6.0),                  Material(vec3(1.0, 1.0, 1.0), 0.5, 0.25));\\n\\n        Intersect intersection = miss;\\n        Intersect plane = intersect(ray, Plane(vec3(0, 1, 0), Material(vec3(1.0, 1.0, 1.0), 1.0, 0.0)));\\n        if (plane.material.diffuse > 0.0 || plane.material.specular > 0.0) { intersection = plane; }\\n        for (int i = 0; i < num_spheres; i++) {\\n            Intersect sphere = intersect(ray, spheres[i]);\\n            if (sphere.material.diffuse > 0.0 || sphere.material.specular > 0.0)\\n                intersection = sphere;\\n        }\\n        return intersection;\\n    }\\n\\n    vec3 radiance(Ray ray) {\\n        vec3 color = vec3(0.0), fresnel = vec3(0.0);\\n        vec3 mask = vec3(1.0);\\n        for (int i = 0; i <= iterations; ++i) {\\n            Intersect hit = trace(ray);\\n\\n            if (hit.material.diffuse > 0.0 || hit.material.specular > 0.0) {\\n\\n                vec3 r0 = hit.material.color.rgb * hit.material.specular;\\n                float hv = clamp(dot(hit.normal, -ray.direction), 0.0, 1.0);\\n                fresnel = r0 + (1.0 - r0) * pow(1.0 - hv, 5.0);\\n                mask *= fresnel;\\n\\n                if (trace(Ray(ray.origin + hit.len * ray.direction + epsilon * light.direction, light.direction)) == miss) {\\n                    color += clamp(dot(hit.normal, light.direction), 0.0, 1.0) * light.color\\n                        * hit.material.color.rgb * hit.material.diffuse\\n                        * (1.0 - fresnel) * mask / fresnel;\\n                }\\n\\n                vec3 reflection = reflect(ray.direction, hit.normal);\\n                ray = Ray(ray.origin + hit.len * ray.direction + epsilon * reflection, reflection);\\n\\n            } else {\\n\\n                vec3 spotlight = vec3(1e6) * pow(abs(dot(ray.direction, light.direction)), 250.0);\\n                color += mask * (ambient + spotlight); break;\\n            }\\n        }\\n        return color;\\n    }\\n\\n    void main() {\\n        vec2 uv    = gl_FragCoord.xy / iResolution.xy - vec2(0.5);\\n            uv.x *= iResolution.x / iResolution.y;\\n\\n        Ray ray = Ray(vec3(0.0, 2.5, 12.0), normalize(vec3(uv.x, uv.y, -1.0)));\\n        gl_FragColor = vec4(pow(radiance(ray) * exposure, vec3(1.0 / gamma)), 1.0);\\n    }\\n\";\r\n","export var testVertexShader = \"\\n    void main() {\\n        vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n        gl_Position = projectionMatrix * mvPosition;\\n    }\\n\";\r\nexport var testFragmentShader = \"\\n    uniform vec3 iResolution; //viewport resolution(in pixels) \\n    uniform float iTime; //shader playback time (in seconds)\\n\\n    #define SHADOW\\n    #define REFLECTION\\n\\n    #define RAYCASTSTEPS 40\\n\\n    #define EPSILON 0.0001\\n    #define MAXDISTANCE 400.\\n    #define GRIDSIZE 8.\\n    #define GRIDSIZESMALL 5.\\n    #define MAXHEIGHT 30.\\n    #define SPEED 0.5\\n\\n    #define time iTime\\n\\n    //\\n    // math functions\\n    //\\n\\n    const mat2 mr = mat2 (0.84147,  0.54030,\\n                        0.54030, -0.84147 );\\n    float hash( float n ) {\\n        return fract(sin(n)*43758.5453);\\n    }\\n    vec2 hash2( float n ) {\\n        return fract(sin(vec2(n,n+1.0))*vec2(2.1459123,3.3490423));\\n    }\\n    vec2 hash2( vec2 n ) {\\n        return fract(sin(vec2( n.x*n.y, n.x+n.y))*vec2(2.1459123,3.3490423));\\n    }\\n    vec3 hash3( float n ) {\\n        return fract(sin(vec3(n,n+1.0,n+2.0))*vec3(3.5453123,4.1459123,1.3490423));\\n    }\\n    vec3 hash3( vec2 n ) {\\n        return fract(sin(vec3(n.x, n.y, n+2.0))*vec3(3.5453123,4.1459123,1.3490423));\\n    }\\n    //\\n    // intersection functions\\n    //\\n\\n    bool intersectPlane(vec3 ro, vec3 rd, float height, out float dist) {\\t\\n        if (rd.y==0.0) {\\n            return false;\\n        }\\n        \\n        float d = -(ro.y - height)/rd.y;\\n        d = min(100000.0, d);\\n        if( d > 0. ) {\\n            dist = d;\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n    bool intersectUnitSphere ( in vec3 ro, in vec3 rd, in vec3 sph, out float dist, out vec3 normal ) {\\n        vec3  ds = ro - sph;\\n        float bs = dot( rd, ds );\\n        float cs = dot(  ds, ds ) - 1.0;\\n        float ts = bs*bs - cs;\\n        \\n        if( ts > 0.0 ) {\\n            ts = -bs - sqrt( ts );\\n            if( ts>0. ) {\\n                normal = normalize( (ro+ts*rd)-sph );\\n                dist = ts;\\n                return true;\\n            }\\n        }\\n        \\n        return false;\\n    }\\n\\n    //\\n    // Scene\\n    //\\n\\n    void getSphereOffset( vec2 grid, inout vec2 center ) {\\n        center = (hash2( grid+vec2(43.12,1.23) ) - vec2(0.5) )*(GRIDSIZESMALL);\\n    }\\n    void getMovingSpherePosition( vec2 grid, vec2 sphereOffset, inout vec3 center ) {\\n        // falling?\\n        float s = 0.1+hash( grid.x*1.23114+5.342+74.324231*grid.y );\\n        float t = fract(14.*s + time/s*.3);\\n        \\n        float y =  s * MAXHEIGHT * abs( 4.*t*(1.-t) );\\n        vec2 offset = grid + sphereOffset;\\n        \\n        center = vec3( offset.x, y, offset.y ) + 0.5*vec3( GRIDSIZE, 2., GRIDSIZE );\\n    }\\n    void getSpherePosition( vec2 grid, vec2 sphereOffset, inout vec3 center ) {\\n        vec2 offset = grid + sphereOffset;\\n        center = vec3( offset.x, 0., offset.y ) + 0.5*vec3( GRIDSIZE, 2., GRIDSIZE );\\n    }\\n    vec3 getSphereColor( vec2 grid ) {\\n        return normalize( hash3( grid+vec2(43.12*grid.y,12.23*grid.x) ) );\\n    }\\n\\n    vec3 trace(vec3 ro, vec3 rd, out vec3 intersection, out vec3 normal, out float dist, out int material) {\\n        material = 0; // sky\\n        dist = MAXDISTANCE;\\n        float distcheck;\\n        \\n        vec3 sphereCenter, col, normalcheck;\\n        \\n        if( intersectPlane( ro,  rd, 0., distcheck) && distcheck < MAXDISTANCE ) {\\n            dist = distcheck;\\n            material = 1;\\n            normal = vec3( 0., 1., 0. );\\n            col = vec3( 0.25 );\\n        } else {\\n            col = vec3( 0. );\\n        }\\n        \\n            \\n        // trace grid\\n        vec3 pos = floor(ro/GRIDSIZE)*GRIDSIZE;\\n        vec3 ri = 1.0/rd;\\n        vec3 rs = sign(rd) * GRIDSIZE;\\n        vec3 dis = (pos-ro + 0.5  * GRIDSIZE + rs*0.5) * ri;\\n        vec3 mm = vec3(0.0);\\n        vec2 offset;\\n            \\n        for( int i=0; i<RAYCASTSTEPS; i++ )\\t{\\n            if( material > 1 || distance( ro.xz, pos.xz ) > dist+GRIDSIZE ) break;\\n            vec2 offset;\\n            getSphereOffset( pos.xz, offset );\\n            \\n            getMovingSpherePosition( pos.xz, -offset, sphereCenter );\\n            \\n            if( intersectUnitSphere( ro, rd, sphereCenter, distcheck, normalcheck ) && distcheck < dist ) {\\n                dist = distcheck;\\n                normal = normalcheck;\\n                material = 2;\\n            }\\n            \\n            getSpherePosition( pos.xz, offset, sphereCenter );\\n            if( intersectUnitSphere( ro, rd, sphereCenter, distcheck, normalcheck ) && distcheck < dist ) {\\n                dist = distcheck;\\n                normal = normalcheck;\\n                col = getSphereColor( offset );\\n                material = 3;\\n            }\\n            mm = step(dis.xyz, dis.zyx);\\n            dis += mm * rs * ri;\\n            pos += mm * rs;\\t\\t\\n        }\\n        \\n        vec3 color = vec3( 0. );\\n        if( material > 0 ) {\\n            intersection = ro + rd*dist;\\n            vec2 map = floor(intersection.xz/GRIDSIZE)*GRIDSIZE;\\n            \\n            if( material == 1 || material == 3 ) {\\n                // lightning\\n                vec3 c = vec3( -GRIDSIZE,0., GRIDSIZE );\\n                for( int x=0; x<3; x++ ) {\\n                    for( int y=0; y<3; y++ ) {\\n                        vec2 mapoffset = map+vec2( c[x], c[y] );\\t\\t\\n                        vec2 offset;\\n                        getSphereOffset( mapoffset, offset );\\n                        vec3 lcolor = getSphereColor( mapoffset );\\n                        vec3 lpos;\\n                        getMovingSpherePosition( mapoffset, -offset, lpos );\\n                        \\n                        float shadow = 1.;\\n    #ifdef SHADOW\\n                        if( material == 1 ) {\\n                            for( int sx=0; sx<3; sx++ ) {\\n                                for( int sy=0; sy<3; sy++ ) {\\n                                    if( shadow < 1. ) continue;\\n                                    \\n                                    vec2 smapoffset = map+vec2( c[sx], c[sy] );\\t\\t\\n                                    vec2 soffset;\\n                                    getSphereOffset( smapoffset, soffset );\\n                                    vec3 slpos, sn;\\n                                    getSpherePosition( smapoffset, soffset, slpos );\\n                                    float sd;\\n                                    if( intersectUnitSphere( intersection, normalize( lpos - intersection ), slpos, sd, sn )  ) {\\n                                        shadow = 0.;\\n                                    }\\t\\t\\t\\t\\t\\t\\t\\n                                }\\n                            }\\n                        }\\n    #endif\\n                        color += col * lcolor * ( shadow * max( dot( normalize(lpos-intersection), normal ), 0.) *\\n                                                clamp(10. / dot( lpos - intersection, lpos - intersection) - 0.075, 0., 1.)  );\\n                    }\\n                }\\n            } else {\\n                // emitter\\n                color = (3.+2.*dot(normal, vec3( 0.5, 0.5, -0.5))) * getSphereColor( map );\\n            }\\n        }\\n        return color;\\n    }\\n\\n\\n    void main() {\\n        vec2 q = gl_FragCoord.xy/iResolution.xy;\\n        vec2 p = -1.0+2.0*q;\\n        p.x *= iResolution.x/iResolution.y;\\n        \\n        // camera\\t\\n        vec3 ce = vec3( cos( 0.232*time) * 10., 6.+3.*cos(0.3*time), GRIDSIZE*(time/SPEED) );\\n        vec3 ro = ce;\\n        vec3 ta = ro + vec3( -sin( 0.232*time) * 10., -2.0+cos(0.23*time), 10.0 );\\n        \\n        float roll = -0.15*sin(0.5*time);\\n        \\n        // camera tx\\n        vec3 cw = normalize( ta-ro );\\n        vec3 cp = vec3( sin(roll), cos(roll),0.0 );\\n        vec3 cu = normalize( cross(cw,cp) );\\n        vec3 cv = normalize( cross(cu,cw) );\\n        vec3 rd = normalize( p.x*cu + p.y*cv + 1.5*cw );\\n        \\n        // raytrace\\n        int material;\\n        vec3 normal, intersection;\\n        float dist;\\n        \\n        vec3 col = trace(ro, rd, intersection, normal, dist, material);\\n\\n    #ifdef REFLECTION\\n        if( material > 0 ) {\\n            float f = 0.04 * clamp(pow(1. + dot(rd, normal), 5.), 0., 1.);\\n                \\n            vec3 ro = intersection + EPSILON*normal;\\n            rd = reflect( rd, normal );\\n            vec3 refColor = trace(ro, rd, intersection, normal, dist, material);\\n            if (material > 2) { \\n                col += .5 * refColor; \\n            } else { // fresnell on floor\\n                col += f * refColor;\\n            }\\n        }\\n    #endif\\n        \\n        col = pow( col * .5, vec3(1./2.2) );\\t\\n        col = clamp(col, 0.0, 1.0);\\n        \\n        // vigneting\\n        col *= 0.25+0.75*pow( 16.0*q.x*q.y*(1.0-q.x)*(1.0-q.y), 0.15 );\\n        \\n        gl_FragColor = vec4( col,1.0);\\n    }\\n\";\r\n","export var testVertexShader = \"\\n    void main() {\\n        vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n        gl_Position = projectionMatrix * mvPosition;\\n    }\\n\";\r\nexport var testFragmentShader = \"\\n    uniform vec3 iResolution; //viewport resolution(in pixels) \\n    uniform float iTime; //shader playback time (in seconds)\\n    uniform vec4 iMouse; \\n\\n    mat2 rotate2d(float angle){\\n        return mat2(cos(angle),-sin(angle),\\n                    sin(angle),cos(angle));\\n    }\\n\\n    float variation(vec2 v1, vec2 v2, float strength, float speed) {\\n        return sin(\\n            dot(normalize(v1), normalize(v2)) * strength + iTime * speed\\n        ) / 100.0;\\n    }\\n\\n    vec3 paintCircle (vec2 uv, vec2 center, float rad, float width) {\\n        \\n        vec2 diff = center-uv;\\n        float len = length(diff);\\n\\n        len += variation(diff, vec2(0.0, 1.0), 5.0, 2.0);\\n        len -= variation(diff, vec2(1.0, 0.0), 5.0, 2.0);\\n        \\n        float circle = smoothstep(rad-width, rad, len) - smoothstep(rad, rad+width, len);\\n        return vec3(circle);\\n    }\\n\\n\\n    void main()\\n    {\\n        vec2 uv = gl_FragCoord.xy / iResolution.xy;\\n        uv.x *= 1.5;\\n        uv.x -= 0.25;\\n        \\n        vec3 color;\\n        float radius = 0.35;\\n        vec2 center = vec2(0.5);\\n        \\n        \\n        //paint color circle\\n        color = paintCircle(uv, center, radius, 0.1);\\n        \\n        //color with gradient\\n        vec2 v = rotate2d(iTime) * uv;\\n        color *= vec3(v.x, v.y, 0.7-v.y*v.x);\\n        \\n        //paint white circle\\n        color += paintCircle(uv, center, radius, 0.01);\\n        \\n        \\n        gl_FragColor = vec4(color, 1.0);\\n    }\\n\";\r\n","export const testVertexShader = `\r\n    void main() {\r\n        vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n        gl_Position = projectionMatrix * mvPosition;\r\n    }\r\n`;\r\nexport const testFragmentShader = `\r\n    uniform vec3 iResolution; //viewport resolution(in pixels) \r\n    uniform float iTime; //shader playback time (in seconds)\r\n    vec2 hash2(vec2 p ) {\r\n    return fract(sin(vec2(dot(p, vec2(123.4, 748.6)), dot(p, vec2(547.3, 659.3))))*5232.85324);   \r\n    }\r\n    float hash(vec2 p) {\r\n    return fract(sin(dot(p, vec2(43.232, 75.876)))*4526.3257);   \r\n    }\r\n\r\n    //Based off of iq's described here: http://www.iquilezles.org/www/articles/voronoilin\r\n    float voronoi(vec2 p) {\r\n        vec2 n = floor(p);\r\n        vec2 f = fract(p);\r\n        float md = 5.0;\r\n        vec2 m = vec2(0.0);\r\n        for (int i = -1;i<=1;i++) {\r\n            for (int j = -1;j<=1;j++) {\r\n                vec2 g = vec2(i, j);\r\n                vec2 o = hash2(n+g);\r\n                o = 0.5+0.5*sin(iTime+5.038*o);\r\n                vec2 r = g + o - f;\r\n                float d = dot(r, r);\r\n                if (d<md) {\r\n                md = d;\r\n                m = n+g+o;\r\n                }\r\n            }\r\n        }\r\n        return md;\r\n    }\r\n\r\n    float ov(vec2 p) {\r\n        float v = 0.0;\r\n        float a = 0.4;\r\n        for (int i = 0;i<3;i++) {\r\n            v+= voronoi(p)*a;\r\n            p*=2.0;\r\n            a*=0.5;\r\n        }\r\n        return v;\r\n    }\r\n\r\n    void main()\r\n    {\r\n        vec2 uv = gl_FragCoord.xy / iResolution.xy;\r\n        vec4 a = vec4(0.2, 0.4, 1.0, 1.0);\r\n        vec4 b = vec4(0.85, 0.9, 1.0, 1.0);\r\n        gl_FragColor = vec4(mix(a, b, smoothstep(0.0, 0.5, ov(uv*5.0))));\r\n        \r\n    }\r\n`;\r\n","import { ShaderRenderer } from './renderer'\r\nexport * as Shaders from \"./shader\"\r\nexport class Renderer extends ShaderRenderer {\r\n  fns: any\r\n  constructor(parentElem: HTMLElement, options: any = {}, fns: any) {\r\n    super(parentElem, options)\r\n    this.fns = fns\r\n  }\r\n}\r\n","var defineProperty = require('../internals/object-define-property').f;\nvar has = require('../internals/has');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n\nmodule.exports = function (it, TAG, STATIC) {\n  if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {\n    defineProperty(it, TO_STRING_TAG, { configurable: true, value: TAG });\n  }\n};\n","'use strict';\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar BUGGY_SAFARI_ITERATORS = false;\n\nvar returnThis = function () { return this; };\n\n// `%IteratorPrototype%` object\n// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\nvar IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;\n\nif ([].keys) {\n  arrayIterator = [].keys();\n  // Safari 8 has buggy iterators w/o `next`\n  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;\n  else {\n    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));\n    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;\n  }\n}\n\nif (IteratorPrototype == undefined) IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nif (!IS_PURE && !has(IteratorPrototype, ITERATOR)) {\n  createNonEnumerableProperty(IteratorPrototype, ITERATOR, returnThis);\n}\n\nmodule.exports = {\n  IteratorPrototype: IteratorPrototype,\n  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS\n};\n"],"sourceRoot":""}